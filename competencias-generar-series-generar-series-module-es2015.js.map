{"version":3,"sources":["./src/app/competencias/generar-series/generar-series.component.html","./src/app/competencias/generar-series/generar-series.component.ts","./src/app/competencias/generar-series/generar-series.module.ts"],"names":[],"mappings":"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","file":"competencias-generar-series-generar-series-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\">\\n        Generar series\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-9\\\">\\n            <h5>Clubes</h5>\\n            <table class=\\\"table\\\">\\n              <ng-container *ngIf=\\\"!!clubes\\\">\\n                <tr *ngFor=\\\"let item of clubes\\\">\\n                  <td class=\\\"p-1\\\"> {{ item }} </td>\\n                </tr>\\n              </ng-container>\\n            </table>\\n          </div>\\n\\n          <div class=\\\"col-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onGenerar()\\\">\\n              <i class=\\\"fa fa-running\\\"></i> Generar\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n              Cancelar\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n          <h5>Categorías</h5>\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th>Categoría</th>\\n                <th>Genero</th>\\n                <th>Distancia</th>\\n                <th>Competidores</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of series\\\">\\n                <td> {{ item.categoria }} </td>\\n                <td> {{ item.genero }} </td>\\n                <td> {{ item.distancia }} </td>\\n                <td> {{ item.cantidad }} </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { InscripcionI } from 'src/app/models/inscripcion';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { SeriesService } from '../services/series.service';\r\n\r\n@Component({\r\n  selector: 'app-generar-series',\r\n  templateUrl: './generar-series.component.html',\r\n  styles: []\r\n})\r\nexport class GenerarSeriesComponent implements OnInit {\r\n  inscripciones = [];\r\n  grupoSeries = [];\r\n  series = [];\r\n  detalleSeries = [];\r\n  clubes = [];\r\n  semis = [];\r\n  finales = [];\r\n\r\n  constructor(private router: Router, \r\n    private location: Location,\r\n    private msg: MessageService,\r\n    private crudService: CrudService,\r\n    private dataService: SeriesService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.limpiarCarreras();\r\n    this.cargarInscripciones();\r\n\r\n  }\r\n\r\n  limpiarCarreras() {\r\n    this.dataService.limpiarCarreras();\r\n  }\r\n\r\n  cargarInscripciones() {\r\n\r\n    this.crudService.getAllRecords$<InscripcionI>('inscripciones').subscribe(\r\n      data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          for (let j = 0; j < data[i].distancia.length; j++) {\r\n            this.inscripciones.push({...data[i], distancia: data[i].distancia[j]});\r\n          }\r\n        }\r\n        this.inscripciones.sort(\r\n          (a, b) => {\r\n            let aValue = a.categoria + a.genero + a.distancia;\r\n            let bValue = b.categoria + b.genero + b.distancia;\r\n            return aValue === bValue ? 0 : aValue > bValue ? -1 : 1;\r\n          }\r\n        );\r\n\r\n        this.generarClubes();\r\n        this.generarSeries();\r\n        this.generarFinalesYsemis();\r\n      }\r\n    )\r\n  }\r\n\r\n  generarClubes() {\r\n    this.inscripciones.forEach( elemento => {\r\n      if (this.clubes.indexOf(elemento.club) === -1) {\r\n        this.clubes.push(elemento.club);\r\n      }\r\n    });\r\n  }\r\n\r\n  generarSeries() {\r\n    let numCarrera = 0;\r\n    let i = 0;\r\n    while (i < this.inscripciones.length) {\r\n      let elemento = this.inscripciones[i];\r\n\r\n      numCarrera++;\r\n      let registro = this.generarObjetoSerie(elemento, numCarrera);\r\n      this.series.push(registro);\r\n      this.agregraGrupoSeries(registro);\r\n      let numero = 0;\r\n      while ( i < this.inscripciones.length && \r\n              elemento.categoria + elemento.genero + elemento.distancia === \r\n              registro.categoria + registro.genero + registro. distancia &&\r\n              this.series[numCarrera - 1].cantidad < 9 ) {\r\n        \r\n        numero++;\r\n        this.contarGrupoSeries(registro);\r\n        this.series[numCarrera - 1].cantidad++;\r\n        this.detalleSeries.push( {...elemento, numero: numero.toString(), idSerie: registro.id, tiempo: ''} );\r\n\r\n        i++;\r\n        elemento = this.inscripciones[i];\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  generarObjetoSerie(data, contador: number) {\r\n    return { \r\n      id: contador.toString().padStart(4, '0'),\r\n      categoria: data.categoria, \r\n      genero: data.genero, \r\n      distancia: data.distancia,\r\n      cantidad: 0,\r\n      status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n    };\r\n  }\r\n\r\n  agregraGrupoSeries(registro) {\r\n    const encontro = this.grupoSeries.find( elemento => \r\n                    elemento.categoria + elemento.genero + elemento.distancia === registro.categoria + registro.genero + registro. distancia);\r\n    if (!encontro) {\r\n      this.grupoSeries.push({ \r\n        categoria: registro.categoria, genero: registro.genero, distancia: registro.distancia, total: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  contarGrupoSeries(reg) {\r\n    let indice = this.grupoSeries.findIndex( el => \r\n      el.categoria + el.genero + el.distancia === reg.categoria + reg.genero + reg.distancia);\r\n\r\n    this.grupoSeries[indice].total++;\r\n  }\r\n\r\n  generarFinalesYsemis() {\r\n    let condiciones = [\r\n      { minimo: 10, maximo: 18, \r\n        carreras: { series: 2, semis: 1, final: 1 },\r\n      },\r\n      { minimo: 19, maximo: 27, \r\n        carreras: { series: 3, semis: 2, final: 1 },\r\n      },\r\n      { minimo: 28, maximo: 36, \r\n        carreras: { series: 4, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 37, maximo: 45, \r\n        carreras: { series: 5, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 46, maximo: 54, \r\n        carreras: { series: 6, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 55, maximo: 63, \r\n        carreras: { series: 7, semis: 4, final: 1 },\r\n      },\r\n      { minimo: 64, maximo: 72, \r\n        carreras: { series: 8, semis: 4, final: 1 },\r\n      }\r\n    ];\r\n\r\n    for (let i = 0; i < this.grupoSeries.length; i++) {\r\n      let el = this.grupoSeries[i];\r\n      for (let j = 0; j < condiciones.length; j++) {\r\n        let condicion = condiciones[j] ;\r\n        if (el.total >= condicion.minimo && el.total <= condicion.maximo) {\r\n          this.grupoSeries[i] = {...el, carreras: condicion.carreras };\r\n        }\r\n      }\r\n    }\r\n    \r\n    let contadorSemis = 0;\r\n    let contadorFinales = 0;\r\n    this.grupoSeries.forEach( el => {\r\n      if (!!el.carreras) {\r\n        for ( let i = 0; i < el.carreras.semis; i++) {\r\n          contadorSemis++;\r\n          this.semis.push({ \r\n            id: 'S' + contadorSemis.toString().padStart(3, '0'),\r\n            categoria: el.categoria, \r\n            genero: el.genero,\r\n            distancia: el.distancia, \r\n            cantidad: '0',\r\n            status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n          });\r\n        }\r\n\r\n        \r\n        contadorFinales++;\r\n        this.finales.push({ \r\n          id: 'F' + contadorFinales.toString().padStart(3, '0'),\r\n          categoria: el.categoria, \r\n          genero: el.genero,\r\n          distancia: el.distancia, \r\n          cantidad: '0',\r\n          status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  onGenerar() {\r\n    /* TODO: Verificar que no existan series, \r\n        si hay series mostrar warning, \r\n        si las series tienen tiempos cargados impedir generar series.\r\n    */\r\n    this.dataService.addAllGrupoSeries(this.grupoSeries);\r\n    this.dataService.addAllSemifinales(this.semis);\r\n    this.dataService.addAllFinales(this.finales);\r\n    this.dataService.addSeriesLS$(this.series).subscribe(\r\n      () => \r\n        this.dataService.addDetalleSeriesLS$(this.detalleSeries).subscribe(\r\n          () => this.msg.ok('Proceso realizado satisfactoriamente')\r\n      ),\r\n      () => this.msg.error('Error generando las series'),\r\n      () => this.router.navigate(['home'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GenerarSeriesComponent } from './generar-series.component';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: GenerarSeriesComponent}\n];\n\n@NgModule({\n  declarations: [GenerarSeriesComponent],\n  imports: [\n    CommonModule, RouterModule.forChild(routes)\n  ]\n})\nexport class GenerarSeriesModule { }\n"],"sourceRoot":"webpack:///"}