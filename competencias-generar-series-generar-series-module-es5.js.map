{"version":3,"sources":["src/app/competencias/generar-series/generar-series.component.html","src/app/competencias/generar-series/generar-series.component.ts","src/app/competencias/generar-series/generar-series.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\">\\n        Generar series\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-9\\\">\\n            <h5>Clubes</h5>\\n            <table class=\\\"table\\\">\\n              <ng-container *ngIf=\\\"!!clubes\\\">\\n                <tr *ngFor=\\\"let item of clubes\\\">\\n                  <td class=\\\"p-1\\\"> {{ item }} </td>\\n                </tr>\\n              </ng-container>\\n            </table>\\n          </div>\\n\\n          <div class=\\\"col-3\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary btn-block\\\" (click)=\\\"onGenerar()\\\">\\n              <i class=\\\"fa fa-running\\\"></i> Generar\\n            </button>\\n            <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n              Cancelar\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\">\\n\\n          <h5>Categorías</h5>\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th>Categoría</th>\\n                <th>Genero</th>\\n                <th>Distancia</th>\\n                <th>Competidores</th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let item of series\\\">\\n                <td> {{ item.categoria }} </td>\\n                <td> {{ item.genero }} </td>\\n                <td> {{ item.distancia }} </td>\\n                <td> {{ item.cantidad }} </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { InscripcionI } from 'src/app/models/inscripcion';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { SeriesService } from '../services/series.service';\r\n\r\n@Component({\r\n  selector: 'app-generar-series',\r\n  templateUrl: './generar-series.component.html',\r\n  styles: []\r\n})\r\nexport class GenerarSeriesComponent implements OnInit {\r\n  inscripciones = [];\r\n  grupoSeries = [];\r\n  series = [];\r\n  detalleSeries = [];\r\n  clubes = [];\r\n  semis = [];\r\n  finales = [];\r\n\r\n  constructor(private router: Router, \r\n    private location: Location,\r\n    private msg: MessageService,\r\n    private crudService: CrudService,\r\n    private dataService: SeriesService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.limpiarCarreras();\r\n    this.cargarInscripciones();\r\n\r\n  }\r\n\r\n  limpiarCarreras() {\r\n    this.dataService.limpiarCarreras();\r\n  }\r\n\r\n  cargarInscripciones() {\r\n\r\n    this.crudService.getAllRecords$<InscripcionI>('inscripciones').subscribe(\r\n      data => {\r\n        for (let i = 0; i < data.length; i++) {\r\n          for (let j = 0; j < data[i].distancia.length; j++) {\r\n            this.inscripciones.push({...data[i], distancia: data[i].distancia[j]});\r\n          }\r\n        }\r\n        this.inscripciones.sort(\r\n          (a, b) => {\r\n            let aValue = a.categoria + a.genero + a.distancia;\r\n            let bValue = b.categoria + b.genero + b.distancia;\r\n            return aValue === bValue ? 0 : aValue > bValue ? -1 : 1;\r\n          }\r\n        );\r\n\r\n        this.generarClubes();\r\n        this.generarSeries();\r\n        this.generarFinalesYsemis();\r\n      }\r\n    )\r\n  }\r\n\r\n  generarClubes() {\r\n    this.inscripciones.forEach( elemento => {\r\n      if (this.clubes.indexOf(elemento.club) === -1) {\r\n        this.clubes.push(elemento.club);\r\n      }\r\n    });\r\n  }\r\n\r\n  generarSeries() {\r\n    let numCarrera = 0;\r\n    let i = 0;\r\n    while (i < this.inscripciones.length) {\r\n      let elemento = this.inscripciones[i];\r\n\r\n      numCarrera++;\r\n      let registro = this.generarObjetoSerie(elemento, numCarrera);\r\n      this.series.push(registro);\r\n      this.agregraGrupoSeries(registro);\r\n      let numero = 0;\r\n      while ( i < this.inscripciones.length && \r\n              elemento.categoria + elemento.genero + elemento.distancia === \r\n              registro.categoria + registro.genero + registro. distancia &&\r\n              this.series[numCarrera - 1].cantidad < 9 ) {\r\n        \r\n        numero++;\r\n        this.contarGrupoSeries(registro);\r\n        this.series[numCarrera - 1].cantidad++;\r\n        this.detalleSeries.push( {...elemento, numero: numero.toString(), idSerie: registro.id, tiempo: ''} );\r\n\r\n        i++;\r\n        elemento = this.inscripciones[i];\r\n      }\r\n    }\r\n   \r\n  }\r\n\r\n  generarObjetoSerie(data, contador: number) {\r\n    return { \r\n      id: contador.toString().padStart(4, '0'),\r\n      categoria: data.categoria, \r\n      genero: data.genero, \r\n      distancia: data.distancia,\r\n      cantidad: 0,\r\n      status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n    };\r\n  }\r\n\r\n  agregraGrupoSeries(registro) {\r\n    const encontro = this.grupoSeries.find( elemento => \r\n                    elemento.categoria + elemento.genero + elemento.distancia === registro.categoria + registro.genero + registro. distancia);\r\n    if (!encontro) {\r\n      this.grupoSeries.push({ \r\n        categoria: registro.categoria, genero: registro.genero, distancia: registro.distancia, total: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  contarGrupoSeries(reg) {\r\n    let indice = this.grupoSeries.findIndex( el => \r\n      el.categoria + el.genero + el.distancia === reg.categoria + reg.genero + reg.distancia);\r\n\r\n    this.grupoSeries[indice].total++;\r\n  }\r\n\r\n  generarFinalesYsemis() {\r\n    let condiciones = [\r\n      { minimo: 10, maximo: 18, \r\n        carreras: { series: 2, semis: 1, final: 1 },\r\n      },\r\n      { minimo: 19, maximo: 27, \r\n        carreras: { series: 3, semis: 2, final: 1 },\r\n      },\r\n      { minimo: 28, maximo: 36, \r\n        carreras: { series: 4, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 37, maximo: 45, \r\n        carreras: { series: 5, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 46, maximo: 54, \r\n        carreras: { series: 6, semis: 3, final: 1 },\r\n      },\r\n      { minimo: 55, maximo: 63, \r\n        carreras: { series: 7, semis: 4, final: 1 },\r\n      },\r\n      { minimo: 64, maximo: 72, \r\n        carreras: { series: 8, semis: 4, final: 1 },\r\n      }\r\n    ];\r\n\r\n    for (let i = 0; i < this.grupoSeries.length; i++) {\r\n      let el = this.grupoSeries[i];\r\n      for (let j = 0; j < condiciones.length; j++) {\r\n        let condicion = condiciones[j] ;\r\n        if (el.total >= condicion.minimo && el.total <= condicion.maximo) {\r\n          this.grupoSeries[i] = {...el, carreras: condicion.carreras };\r\n        }\r\n      }\r\n    }\r\n    \r\n    let contadorSemis = 0;\r\n    let contadorFinales = 0;\r\n    this.grupoSeries.forEach( el => {\r\n      if (!!el.carreras) {\r\n        for ( let i = 0; i < el.carreras.semis; i++) {\r\n          contadorSemis++;\r\n          this.semis.push({ \r\n            id: 'S' + contadorSemis.toString().padStart(3, '0'),\r\n            categoria: el.categoria, \r\n            genero: el.genero,\r\n            distancia: el.distancia, \r\n            cantidad: '0',\r\n            status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n          });\r\n        }\r\n\r\n        \r\n        contadorFinales++;\r\n        this.finales.push({ \r\n          id: 'F' + contadorFinales.toString().padStart(3, '0'),\r\n          categoria: el.categoria, \r\n          genero: el.genero,\r\n          distancia: el.distancia, \r\n          cantidad: '0',\r\n          status: { asignarNumero: false, cargarTiempos: false,  generarResultados: false }\r\n        });\r\n\r\n      }\r\n    });\r\n  }\r\n  \r\n\r\n  onGenerar() {\r\n    /* TODO: Verificar que no existan series, \r\n        si hay series mostrar warning, \r\n        si las series tienen tiempos cargados impedir generar series.\r\n    */\r\n    this.dataService.addAllGrupoSeries(this.grupoSeries);\r\n    this.dataService.addAllSemifinales(this.semis);\r\n    this.dataService.addAllFinales(this.finales);\r\n    this.dataService.addSeriesLS$(this.series).subscribe(\r\n      () => \r\n        this.dataService.addDetalleSeriesLS$(this.detalleSeries).subscribe(\r\n          () => this.msg.ok('Proceso realizado satisfactoriamente')\r\n      ),\r\n      () => this.msg.error('Error generando las series'),\r\n      () => this.router.navigate(['home'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GenerarSeriesComponent } from './generar-series.component';\n\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', component: GenerarSeriesComponent}\n];\n\n@NgModule({\n  declarations: [GenerarSeriesComponent],\n  imports: [\n    CommonModule, RouterModule.forChild(routes)\n  ]\n})\nexport class GenerarSeriesModule { }\n"],"sourceRoot":"webpack:///"}