{"version":3,"sources":["./src/app/services/array.service.ts"],"names":[],"mappings":"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","file":"common-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayService {\n\n  constructor() { }\n\n  groupAndFlat(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n    let group = this.concatFields(copySource[0], parFields);\n    newArray.push(copySource[0]);\n\n    for (let i = 0; i < copySource.length; i++) {\n      let newGroup = this.concatFields(copySource[i], parFields)\n      if ( newGroup !== group ) {\n        group = newGroup;\n        newArray.push(copySource[i]);\n      }\n    }\n\n    return newArray;\n  }\n\n  groupAndCount(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let contador = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        i++;\n        contador++;\n      }\n      newArray.push({...element, cantidad: contador});\n    }\n\n    return newArray;\n  }\n\n  groupAndSum(source: any[], parFields: string[], fieldSum: number | string) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let suma = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        suma += +copySource[i][fieldSum];\n        i++;\n      }\n      newArray.push({...element, suma});\n    }\n\n    return newArray;\n  }\n\n  concatFields(obj: any, fields: string[]) {\n    return fields.reduce( (acc, el) => acc + obj[el].trim(), '');\n  }\n\n  mayMinOrEqual(parA: any, parB: any, fields: string[]) {\n    const A = this.concatFields(parA, fields);\n    const B = this.concatFields(parB, fields);\n\n    if (A > B ) {\n      return 1;\n    }\n    if (B > A ) {\n      return -1;\n    };\n    return 0\n\n  }\n\n}\n\n/*\n\n   --- ALGUNAS PRUEBAS ---\nconst contarArray = this.arrayService.groupAndCount(todasLasDistancias, ['embarcacion','distancia']);\n    const sumarArray = this.arrayService.groupAndSum(todasLasDistancias, ['embarcacion','distancia'], 'distancia');\n*/"],"sourceRoot":"webpack:///"}