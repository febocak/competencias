{"version":3,"sources":["./src/app/tables/distancias/components/distancias-form.component.html","./src/app/tables/distancias/components/distancias.component.html","./src/app/tables/distancias/components/tipo-de-competencia-info.component.html","./src/app/tables/distancias/components/distancias-form.component.ts","./src/app/tables/distancias/components/distancias.component.ts","./src/app/tables/distancias/components/tipo-de-competencia-info.component.ts","./src/app/tables/distancias/distancias-form-resolver.guard.ts","./src/app/tables/distancias/distancias-resolver.guard.ts","./src/app/tables/distancias/distancias-routing.module.ts","./src/app/tables/distancias/distancias.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,+aAAgX,wCAAwC,mqBAAmqB,sBAAsB,+oEAA+oE,+DAA+D,gX;;;;;;;;;;;;ACA9yG;AAAe,kaAAmW,iBAAiB,idAAid,8DAA8D,iBAAiB,QAAQ,GAAG,MAAM,sBAAsB,mDAAmD,iBAAiB,QAAQ,GAAG,MAAM,wBAAwB,mDAAmD,iBAAiB,QAAQ,GAAG,MAAM,sBAAsB,4FAA4F,iBAAiB,UAAU,GAAG,0M;;;;;;;;;;;;ACA5xC;AAAe,kNAAmJ,qBAAqB,iBAAiB,4BAA4B,qJ;;;;;;;;;;;;;;;;;;;;;;;ACAlL;AACkB;AAEX;AACd;AACoB;AACV;AACE;AAUvD,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAOlC,YACU,WAAwB,EACxB,EAAe,EACf,GAAmB,EACnB,QAAkB,EAClB,QAAwB,EACxB,MAAc,EACd,YAA0B;QAN1B,gBAAW,GAAX,WAAW,CAAa;QACxB,OAAE,GAAF,EAAE,CAAa;QACf,QAAG,GAAH,GAAG,CAAgB;QACnB,aAAQ,GAAR,QAAQ,CAAU;QAClB,aAAQ,GAAR,QAAQ,CAAgB;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,iBAAY,GAAZ,YAAY,CAAc;QAbpC,iBAAY,GAAG,EAAE,MAAM,EAAE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAc3D,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACzB,MAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC;QACzD,IAAI,CAAC,YAAY,qBACZ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,IAClD,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAC/D,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,OAAO,CAAC,CAAC;QAExE,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjD,IAAI,CAAC,YAAY,CAAC,eAAe,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;QAChE,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAEjE,IAAI,CAAC,SAAS,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,SAAS,EAAE;YAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;IACH,CAAC;IAED,SAAS;QACP,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC1B,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;YACvC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;YACzC,SAAS,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAE;SACxC,CAAC,CAAC;IACL,CAAC;IAED,WAAW;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;QACjE,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAG,UAAU,EAAE;YACzC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;SAC1C;IACH,CAAC;IAED,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IACD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;IAED,QAAQ,CAAC,SAA4B;QACnC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC1B,MAAM,MAAM,mBAAK,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,IAAK,IAAI,CAAC,MAAM,CAAC,KAAK,CAAE;QAEjE,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,UAAU,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;YACxE,SAAS,CAAC,QAAQ,GAAG,KAAK,CAAC;YAC3B,OAAO;SACR;QAED,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAC/C,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,eAAe,CAAC,SAAiB;QAC/B,IAAI,YAAY,GAAG;YACjB,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;YAC/C,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK;YACnD,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK;SAChD;QACD,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE;YAChC,IAAI,CAAC,YAAY,qBAAO,IAAI,CAAC,YAAY,IAAE,SAAS,EAAE,CAAC,YAAY,CAAC,GAAC;SACtE;aAAM,IAAI,SAAS,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC;SAC/C;aAAM,IAAI,SAAS,KAAK,WAAW,EAAE;YACpC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,EAAE,YAAY,CAAC;SAC3E;aAAM,IAAI,SAAS,KAAK,UAAU,EAAE;YACnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC;SAC7D;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,uBAAuB,EAAE,IAAI,CAAC,YAAY,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CACxG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC,KAAK,GAAG,iCAAiC,CAAC,EAC7F,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,iCAAiC,GAAG,KAAK,CAAC,UAAU,CAAC,EAC7E,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,CACpB,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAED,QAAQ,CAAC,MAAc;QACrB,MAAM,QAAQ,GAAE,EAAC,GAAG,EAAC,SAAS,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAC,CAAC;QACvE,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,cAAc,CAAC,MAAc;QAC3B,MAAM,QAAQ,GAAG,EAAC,GAAG,EAAC,YAAY,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,WAAW,EAAC,CAAC;QAC7E,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAED,WAAW,CAAC,MAAM;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;QAC7E,MAAM,aAAa,GAAG,EAAE,CAAC;QACzB,aAAa,CAAC,IAAI,CAAC,gGAAgG,CAAC,CAAC;QACrH,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,WAAW,EAAE,MAAM,CAAC,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC;QAE9G,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACzC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAE/D,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,KAAK,SAAS,EAAE;oBAC1C,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;oBACnC,OAAO,KAAK,CAAC;iBACd;qBAAM;oBACL,IAAG,CAAC,MAAM,CAAC,EAAE,KAAK,KAAK,EAAE;wBACvB,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC;wBACnC,OAAO,KAAK,CAAC;qBACd;iBACF;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;;YArIwB,kEAAW;YACpB,0DAAW;YACV,4EAAc;YACT,wDAAQ;YACR,8DAAc;YAChB,sDAAM;YACA,oEAAY;;AAdzB,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,qBAAqB;QAC/B,8PAA+C;;KAEhD,CAAC;GACW,uBAAuB,CA6InC;AA7ImC;;;;;;;;;;;;;;;;;;;ACjBc;AACD;AAUjD,IAAa,mBAAmB,GAAhC,MAAa,mBAAmB;IAG9B,YAAqB,KAAqB;QAArB,UAAK,GAAL,KAAK,CAAgB;IAAI,CAAC;IAE/C,QAAQ;QACN,IAAI,CAAC,YAAY,qBACZ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,IAC5C,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,GAC5D,CAAC;QACF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;IAC3C,CAAC;CAEF;;YAV6B,8DAAc;;AAH/B,mBAAmB;IAL/B,+DAAS,CAAC;QACT,QAAQ,EAAE,iBAAiB;QAC3B,oPAA0C;KAE3C,CAAC;GACW,mBAAmB,CAa/B;AAb+B;;;;;;;;;;;;;;;;;;;ACXyB;AAEd;AAO3C,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAGzC,YAAoB,QAAkB;QAAlB,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAE3C,QAAQ;IACR,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;CACF;;YAR+B,wDAAQ;;AAF7B;IAAR,2DAAK,EAAE;oEAAkC;AAD/B,8BAA8B;IAL1C,+DAAS,CAAC;QACT,QAAQ,EAAE,8BAA8B;QACxC,gRAAwD;KAEzD,CAAC;GACW,8BAA8B,CAW1C;AAX0C;;;;;;;;;;;;;;;;;;;;ACTA;AAEU;AACT;AAO5C,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAEjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO,CAAC,KAA6B,EAC7B,KAA0B;QAChC,MAAM,mBAAmB,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACtE,MAAM,QAAQ,GAAG,qDAAQ,CACvB,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,uBAAuB,EAAE,mBAAmB,CAAC,EACzE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,YAAY,EAAC,WAAW,CAAC,CAC1D,CAAC;QAEF,OAAO,QAAQ,CAAC;IAClB,CAAC;CACF;;YAZkC,kEAAW;;AAFjC,sBAAsB;IAHlC,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,sBAAsB,CAclC;AAdkC;;;;;;;;;;;;;;;;;;;ACVQ;AAEU;AAOrD,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAE7B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,OAAO,CAAC,KAA6B,EAC7B,KAA0B;QAChC,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrD,OAAO,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,uBAAuB,EAAC,EAAE,CAAC,CAAC;IACjE,CAAC;CACF;;YAPkC,kEAAW;;AAFjC,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,kBAAkB,CAS9B;AAT8B;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACc;AAEU;AACS;AAEF;AACS;AAEjF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,oFAAmB,EAAE;IAC5C,EAAE,IAAI,EAAE,sBAAsB,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,6EAAkB,EAAE,EAAE,SAAS,EAAE,oFAAmB,EAAE;IAChH,EAAE,IAAI,EAAE,8BAA8B,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,sFAAsB,EAAE,EAAE,SAAS,EAAE,6FAAuB,EAAE;IAChI,EAAE,IAAI,EAAE,kCAAkC,EAAE,OAAO,EAAE,EAAE,aAAa,EAAE,sFAAsB,EAAE,EAAE,SAAS,EAAE,6FAAuB,EAAE;CACrI,CAAC;AAKF,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;CAAI;AAA3B,uBAAuB;IAJnC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,uBAAuB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACnBK;AACM;AAEuB;AACJ;AAEM;AACS;AACgB;AASjG,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAP5B,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAE,oFAAmB,EAAE,6FAAuB,EAAE,6GAA8B,CAAE;QAC9F,OAAO,EAAE;YACP,4DAAY,EAAE,kFAAuB;YACrC,0DAAW,EAAE,kEAAmB;SACjC;KACF,CAAC;GACW,gBAAgB,CAAI;AAAJ","file":"tables-distancias-distancias-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-3\\\">\\r\\n    <app-tipo-de-competencia-info\\r\\n      [tCompetencia]=\\\"tCompetencia\\\"\\r\\n    ></app-tipo-de-competencia-info>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\r\\n\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\r\\n        {{ templateData.titulo + \\\" distancia\\\" }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categor√≠a </label>\\r\\n                <select formControlName=\\\"categoria\\\" required\\r\\n                  [class.is-invalid]=\\\"categoria.invalid && categoria.touched\\\" class=\\\"custom-select\\\">\\r\\n                  <option value=\\\"categoria\\\"></option>\\r\\n                  <option [value]=\\\"registro.categoria\\\" *ngFor=\\\"let registro of tblCategoria\\\" >{{ registro.categoria }}</option>\\r\\n                </select>\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.untouched || !categoria.hasError('required')\\\">La categor√≠a es requerida</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"embarcacion\\\" class=\\\"control-label\\\"> Embarcaci√≥n </label>\\r\\n                <select formControlName=\\\"embarcacion\\\" required\\r\\n                  [class.is-invalid]=\\\"embarcacion.invalid && embarcacion.touched\\\" class=\\\"custom-select\\\">\\r\\n                  <option value=\\\"embarcacion\\\"></option>\\r\\n                  <option value=\\\"K1\\\">K1</option>\\r\\n                  <option value=\\\"K2\\\">K2</option>\\r\\n                  <option value=\\\"K4\\\">K4</option>\\r\\n                  <option value=\\\"430\\\">430</option>\\r\\n                  <option value=\\\"canoa\\\">Canoa</option>\\r\\n                </select>\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"embarcacion.untouched || !embarcacion.hasError('required')\\\">El tipo de embarcaci√≥n es requerido</small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"distancia\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\r\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\r\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\r\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\r\\n                Cancelar\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-3\\\">\\r\\n    <app-tipo-de-competencia-info\\r\\n      [tCompetencia]=\\\"tCompetencia\\\"\\r\\n    ></app-tipo-de-competencia-info>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-lg-9\\\">\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header d-flex\\\">\\r\\n        Distancias\\r\\n        <a routerLink=\\\"/distancias/{{tCompetencia.id}}/add\\\" class=\\\"text-primary ml-auto\\\">\\r\\n          <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th> Categor√≠a </th>\\r\\n          <th> Embarcaci√≥n </th>\\r\\n          <th> Distancia </th>\\r\\n          <th> </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let registro of tabla; let i = index\\\">\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.categoria }} </td>\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.embarcacion }} </td>\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.distancia }} </td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a routerLink=\\\"/distancias/{{tCompetencia.id}}/delete/{{i}}\\\" class=\\\"text-danger\\\">\\r\\n              <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Tipo de compentencia\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <p>{{ tCompetencia.tipo }}</p>\\r\\n    <p>{{ tCompetencia.descripcion }}</p>\\r\\n    \\r\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"goBack()\\\">\\r\\n      Regresar\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { CategoriaI } from '@models/categoria';\r\n\r\n@Component({\r\n  selector: 'app-distancias-form',\r\n  templateUrl: './distancias-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class DistanciasFormComponent implements OnInit {\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n\r\n  tCompetencia: TipoDeCompetenciaI;\r\n  tblCategoria: CategoriaI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    const data = this.actRoute.snapshot.data['distanciaData']\r\n    this.tCompetencia = { \r\n      ...this.actRoute.snapshot.data['distanciaData'][0],\r\n      id: this.actRoute.snapshot.paramMap.get('idTipoDeCompetencia')\r\n    };\r\n    this.tblCategoria = this.actRoute.snapshot.data['distanciaData'][1];\r\n    this.tblCategoria = this.arrayService.sort(this.tblCategoria, ['desde'])\r\n    \r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      categoria: ['', [Validators.required] ],\r\n      embarcacion: ['', [Validators.required] ],\r\n      distancia: ['', [Validators.required] ]\r\n    });\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.tCompetencia.distancia[this.templateData.id];\r\n    this.miForm.patchValue(record);\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.categoria.disable();\r\n    }\r\n  }\r\n\r\n  get embarcacion() {\r\n    return this.miForm.get('embarcacion');\r\n  }\r\n  get distancia() {\r\n    return this.miForm.get('distancia');\r\n  }\r\n  get categoria() {\r\n    return this.miForm.get('categoria');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id, ...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    this.prepararArreglo(this.templateData.titulo);\r\n    this.guardar();\r\n  }\r\n  \r\n  prepararArreglo(parAccion: string) {\r\n    let objDistancia = {\r\n      categoria: this.miForm.controls.categoria.value,\r\n      embarcacion: this.miForm.controls.embarcacion.value,\r\n      distancia: this.miForm.controls.distancia.value,\r\n    }\r\n    if (!this.tCompetencia.distancia) {\r\n      this.tCompetencia = {...this.tCompetencia, distancia: [objDistancia]}\r\n    } else if (parAccion === 'Agregar') {\r\n      this.tCompetencia.distancia.push(objDistancia)\r\n    } else if (parAccion === 'Modificar') {\r\n      this.tCompetencia.distancia.splice(+this.templateData.id, 1, objDistancia)\r\n    } else if (parAccion === 'Eliminar') {\r\n      this.tCompetencia.distancia.splice(+this.templateData.id, 1)\r\n    }\r\n  }\r\n\r\n  guardar() {\r\n    this.crudService.updateRecord$('tipos-de-competencias', this.tCompetencia.id, this.tCompetencia).subscribe(\r\n      _ => this.msg.ok(this.miForm.controls['distancia'].value + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.goBack()\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.tCompetencia.distancia ? this.tCompetencia.distancia : [];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con los mismos valores para los campos categoria, embarcaci√≥n y distancia');\r\n    const objSearch = [];\r\n    objSearch.push({ categoria: record.categoria, embarcacion: record.embarcacion, distancia: record.distancia });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const index = this.arrayService.findIndex(tabla, objSearch[i]);\r\n\r\n      if (index >= 0) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(+record.id !== index) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { DistanciaI } from '@models/distancia';\r\n\r\n@Component({\r\n  selector: 'app-distanciass',\r\n  templateUrl: './distancias.component.html',\r\n  styles: []\r\n})\r\nexport class DistanciasComponent implements OnInit {\r\n  tCompetencia: TipoDeCompetenciaI;\r\n  tabla: DistanciaI[];\r\n  constructor( private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.tCompetencia = { \r\n      ...this.route.snapshot.data['distanciaData'],\r\n      id: this.route.snapshot.paramMap.get('idTipoDeCompetencia')\r\n    };\r\n    this.tabla = this.tCompetencia.distancia;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-tipo-de-competencia-info',\r\n  templateUrl: './tipo-de-competencia-info.component.html',\r\n  styles: []\r\n})\r\nexport class TipoDeCompetenciaInfoComponent implements OnInit {\r\n  @Input() tCompetencia: TipoDeCompetenciaI;\r\n\r\n  constructor(private location: Location) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { CategoriaI } from '@models/categoria';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistanciasFormResolver  implements Resolve<[TipoDeCompetenciaI, CategoriaI[]]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<[TipoDeCompetenciaI, CategoriaI[]]> {\r\n    const idTipoDeCompetencia = route.paramMap.get('idTipoDeCompetencia');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('tipos-de-competencias', idTipoDeCompetencia),\r\n      this.crudService.getAllRecords$('categorias','categoria')\r\n    );\r\n    \r\n    return allData$;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { Observable } from 'rxjs';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistanciasResolver implements Resolve<TipoDeCompetenciaI> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<TipoDeCompetenciaI> {\r\n    const id = route.paramMap.get('idTipoDeCompetencia');\r\n    return this.crudService.getRecord$('tipos-de-competencias',id);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DistanciasResolver } from './distancias-resolver.guard';\r\nimport { DistanciasFormResolver } from './distancias-form-resolver.guard';\r\n\r\nimport { DistanciasComponent } from './components/distancias.component';\r\nimport { DistanciasFormComponent } from './components/distancias-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DistanciasComponent },\r\n  { path: ':idTipoDeCompetencia', resolve: { distanciaData: DistanciasResolver }, component: DistanciasComponent },\r\n  { path: ':idTipoDeCompetencia/:action', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent },\r\n  { path: ':idTipoDeCompetencia/:action/:id', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DistanciasRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DistanciasRoutingModule } from './distancias-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { DistanciasComponent } from './components/distancias.component';\r\nimport { DistanciasFormComponent } from './components/distancias-form.component';\r\nimport { TipoDeCompetenciaInfoComponent } from './components/tipo-de-competencia-info.component';\r\n\r\n@NgModule({\r\n  declarations: [ DistanciasComponent, DistanciasFormComponent, TipoDeCompetenciaInfoComponent ],\r\n  imports: [\r\n    CommonModule, DistanciasRoutingModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ]\r\n})\r\nexport class DistanciasModule { }\r\n"],"sourceRoot":"webpack:///"}