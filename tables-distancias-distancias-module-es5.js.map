{"version":3,"sources":["src/app/tables/distancias/components/distancias-form.component.html","src/app/tables/distancias/components/distancias.component.html","src/app/tables/distancias/components/tipo-de-competencia-info.component.html","src/app/tables/distancias/components/distancias-form.component.ts","src/app/tables/distancias/components/distancias.component.ts","src/app/tables/distancias/components/tipo-de-competencia-info.component.ts","src/app/tables/distancias/distancias-form-resolver.guard.ts","src/app/tables/distancias/distancias-resolver.guard.ts","src/app/tables/distancias/distancias-routing.module.ts","src/app/tables/distancias/distancias.module.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-3\\\">\\r\\n    <app-tipo-de-competencia-info\\r\\n      [tCompetencia]=\\\"tCompetencia\\\"\\r\\n    ></app-tipo-de-competencia-info>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\r\\n\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\r\\n        {{ templateData.titulo + \\\" distancia\\\" }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-12\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categoría </label>\\r\\n                <select formControlName=\\\"categoria\\\" required\\r\\n                  [class.is-invalid]=\\\"categoria.invalid && categoria.touched\\\" class=\\\"custom-select\\\">\\r\\n                  <option value=\\\"categoria\\\"></option>\\r\\n                  <option [value]=\\\"registro.categoria\\\" *ngFor=\\\"let registro of tblCategoria\\\" >{{ registro.categoria }}</option>\\r\\n                </select>\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.untouched || !categoria.hasError('required')\\\">La categoría es requerida</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"embarcacion\\\" class=\\\"control-label\\\"> Embarcación </label>\\r\\n                <select formControlName=\\\"embarcacion\\\" required\\r\\n                  [class.is-invalid]=\\\"embarcacion.invalid && embarcacion.touched\\\" class=\\\"custom-select\\\">\\r\\n                  <option value=\\\"embarcacion\\\"></option>\\r\\n                  <option value=\\\"K1\\\">K1</option>\\r\\n                  <option value=\\\"K2\\\">K2</option>\\r\\n                  <option value=\\\"K4\\\">K4</option>\\r\\n                  <option value=\\\"430\\\">430</option>\\r\\n                  <option value=\\\"canoa\\\">Canoa</option>\\r\\n                </select>\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"embarcacion.untouched || !embarcacion.hasError('required')\\\">El tipo de embarcación es requerido</small>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-4\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\r\\n                <input type=\\\"text\\\" formControlName=\\\"distancia\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\r\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\r\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\r\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\r\\n                Cancelar\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-lg-3\\\">\\r\\n    <app-tipo-de-competencia-info\\r\\n      [tCompetencia]=\\\"tCompetencia\\\"\\r\\n    ></app-tipo-de-competencia-info>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col-lg-9\\\">\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header d-flex\\\">\\r\\n        Distancias\\r\\n        <a routerLink=\\\"/distancias/{{tCompetencia.id}}/add\\\" class=\\\"text-primary ml-auto\\\">\\r\\n          <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <table class=\\\"table table-bordered table-hover\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th> Categoría </th>\\r\\n          <th> Embarcación </th>\\r\\n          <th> Distancia </th>\\r\\n          <th> </th>\\r\\n        </tr>\\r\\n      </thead>\\r\\n\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let registro of tabla; let i = index\\\">\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.categoria }} </td>\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.embarcacion }} </td>\\r\\n          <td routerLink=\\\"/distancias/{{tCompetencia.id}}/edit/{{i}}\\\"> {{ registro.distancia }} </td>\\r\\n          <td class=\\\"text-center\\\">\\r\\n            <a routerLink=\\\"/distancias/{{tCompetencia.id}}/delete/{{i}}\\\" class=\\\"text-danger\\\">\\r\\n              <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\r\\n  <div class=\\\"card-header\\\">\\r\\n    Tipo de compentencia\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"card-body\\\">\\r\\n    <p>{{ tCompetencia.tipo }}</p>\\r\\n    <p>{{ tCompetencia.descripcion }}</p>\\r\\n    \\r\\n    <button class=\\\"btn btn-block btn-secondary\\\" (click)=\\\"goBack()\\\">\\r\\n      Regresar\\r\\n    </button>\\r\\n\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { CategoriaI } from '@models/categoria';\r\n\r\n@Component({\r\n  selector: 'app-distancias-form',\r\n  templateUrl: './distancias-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class DistanciasFormComponent implements OnInit {\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n\r\n  tCompetencia: TipoDeCompetenciaI;\r\n  tblCategoria: CategoriaI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    const data = this.actRoute.snapshot.data['distanciaData']\r\n    this.tCompetencia = { \r\n      ...this.actRoute.snapshot.data['distanciaData'][0],\r\n      id: this.actRoute.snapshot.paramMap.get('idTipoDeCompetencia')\r\n    };\r\n    this.tblCategoria = this.actRoute.snapshot.data['distanciaData'][1];\r\n    this.tblCategoria = this.arrayService.sort(this.tblCategoria, ['desde'])\r\n    \r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      categoria: ['', [Validators.required] ],\r\n      embarcacion: ['', [Validators.required] ],\r\n      distancia: ['', [Validators.required] ]\r\n    });\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.tCompetencia.distancia[this.templateData.id];\r\n    this.miForm.patchValue(record);\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.categoria.disable();\r\n    }\r\n  }\r\n\r\n  get embarcacion() {\r\n    return this.miForm.get('embarcacion');\r\n  }\r\n  get distancia() {\r\n    return this.miForm.get('distancia');\r\n  }\r\n  get categoria() {\r\n    return this.miForm.get('categoria');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id, ...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    this.prepararArreglo(this.templateData.titulo);\r\n    this.guardar();\r\n  }\r\n  \r\n  prepararArreglo(parAccion: string) {\r\n    let objDistancia = {\r\n      categoria: this.miForm.controls.categoria.value,\r\n      embarcacion: this.miForm.controls.embarcacion.value,\r\n      distancia: this.miForm.controls.distancia.value,\r\n    }\r\n    if (!this.tCompetencia.distancia) {\r\n      this.tCompetencia = {...this.tCompetencia, distancia: [objDistancia]}\r\n    } else if (parAccion === 'Agregar') {\r\n      this.tCompetencia.distancia.push(objDistancia)\r\n    } else if (parAccion === 'Modificar') {\r\n      this.tCompetencia.distancia.splice(+this.templateData.id, 1, objDistancia)\r\n    } else if (parAccion === 'Eliminar') {\r\n      this.tCompetencia.distancia.splice(+this.templateData.id, 1)\r\n    }\r\n  }\r\n\r\n  guardar() {\r\n    this.crudService.updateRecord$('tipos-de-competencias', this.tCompetencia.id, this.tCompetencia).subscribe(\r\n      _ => this.msg.ok(this.miForm.controls['distancia'].value + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.goBack()\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.tCompetencia.distancia ? this.tCompetencia.distancia : [];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con los mismos valores para los campos categoria, embarcación y distancia');\r\n    const objSearch = [];\r\n    objSearch.push({ categoria: record.categoria, embarcacion: record.embarcacion, distancia: record.distancia });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const index = this.arrayService.findIndex(tabla, objSearch[i]);\r\n\r\n      if (index >= 0) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(+record.id !== index) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { DistanciaI } from '@models/distancia';\r\n\r\n@Component({\r\n  selector: 'app-distanciass',\r\n  templateUrl: './distancias.component.html',\r\n  styles: []\r\n})\r\nexport class DistanciasComponent implements OnInit {\r\n  tCompetencia: TipoDeCompetenciaI;\r\n  tabla: DistanciaI[];\r\n  constructor( private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.tCompetencia = { \r\n      ...this.route.snapshot.data['distanciaData'],\r\n      id: this.route.snapshot.paramMap.get('idTipoDeCompetencia')\r\n    };\r\n    this.tabla = this.tCompetencia.distancia;\r\n  }\r\n  \r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { Location } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-tipo-de-competencia-info',\r\n  templateUrl: './tipo-de-competencia-info.component.html',\r\n  styles: []\r\n})\r\nexport class TipoDeCompetenciaInfoComponent implements OnInit {\r\n  @Input() tCompetencia: TipoDeCompetenciaI;\r\n\r\n  constructor(private location: Location) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { CategoriaI } from '@models/categoria';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistanciasFormResolver  implements Resolve<[TipoDeCompetenciaI, CategoriaI[]]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<[TipoDeCompetenciaI, CategoriaI[]]> {\r\n    const idTipoDeCompetencia = route.paramMap.get('idTipoDeCompetencia');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('tipos-de-competencias', idTipoDeCompetencia),\r\n      this.crudService.getAllRecords$('categorias','categoria')\r\n    );\r\n    \r\n    return allData$;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { Observable } from 'rxjs';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DistanciasResolver implements Resolve<TipoDeCompetenciaI> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<TipoDeCompetenciaI> {\r\n    const id = route.paramMap.get('idTipoDeCompetencia');\r\n    return this.crudService.getRecord$('tipos-de-competencias',id);\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { DistanciasResolver } from './distancias-resolver.guard';\r\nimport { DistanciasFormResolver } from './distancias-form-resolver.guard';\r\n\r\nimport { DistanciasComponent } from './components/distancias.component';\r\nimport { DistanciasFormComponent } from './components/distancias-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: DistanciasComponent },\r\n  { path: ':idTipoDeCompetencia', resolve: { distanciaData: DistanciasResolver }, component: DistanciasComponent },\r\n  { path: ':idTipoDeCompetencia/:action', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent },\r\n  { path: ':idTipoDeCompetencia/:action/:id', resolve: { distanciaData: DistanciasFormResolver }, component: DistanciasFormComponent }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DistanciasRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DistanciasRoutingModule } from './distancias-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { DistanciasComponent } from './components/distancias.component';\r\nimport { DistanciasFormComponent } from './components/distancias-form.component';\r\nimport { TipoDeCompetenciaInfoComponent } from './components/tipo-de-competencia-info.component';\r\n\r\n@NgModule({\r\n  declarations: [ DistanciasComponent, DistanciasFormComponent, TipoDeCompetenciaInfoComponent ],\r\n  imports: [\r\n    CommonModule, DistanciasRoutingModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ]\r\n})\r\nexport class DistanciasModule { }\r\n"],"sourceRoot":"webpack:///"}