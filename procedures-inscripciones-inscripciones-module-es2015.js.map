{"version":3,"sources":["./src/app/procedures/inscripciones/components/inscripciones-form.component.html","./src/app/procedures/inscripciones/components/inscripciones.component.html","./src/app/procedures/inscripciones/components/inscripciones-form.component.ts","./src/app/procedures/inscripciones/components/inscripciones.component.ts","./src/app/procedures/inscripciones/inscripciones-form-resolver.guard.ts","./src/app/procedures/inscripciones/inscripciones-resolver.guard.ts","./src/app/procedures/inscripciones/inscripciones-routing.module.ts","./src/app/procedures/inscripciones/inscripciones.module.ts"],"names":[],"mappings":"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","file":"procedures-inscripciones-inscripciones-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" inscipción\\\" }}\\n        \\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-9\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"palista\\\" class=\\\"control-label\\\"> Palista </label>\\n                <select formControlName=\\\"palista\\\" required\\n                  [class.is-invalid]=\\\"palista.invalid && palista.touched\\\" class=\\\"custom-select\\\"\\n                  (change)=\\\"selectPalista(palista.value)\\\">\\n                  <option value=\\\"\\\"></option>\\n                  <option [value]=\\\"registro.palista\\\" *ngFor=\\\"let registro of tblPalistas\\\" >{{ registro.palista }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"palista.untouched || !palista.hasError('required')\\\">El palista es requerido</small>\\n              </div>\\n\\n\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"genero\\\" class=\\\"control-label\\\"> Genero </label>\\n                    <input type=\\\"text\\\" formControlName=\\\"genero\\\" [readonly]=\\\"true\\\" required\\n                      [class.is-invalid]=\\\"(genero.invalid && genero.touched)\\\"\\n                      class=\\\"form-control\\\" />\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"genero.valid || genero.untouched\\\">El genero es requerido</small>\\n                  </div>\\n                </div>\\n  \\n                <div class=\\\"col-6\\\">\\n                  <div class=\\\"form-group\\\">\\n                    <label for=\\\"categoria\\\" class=\\\"control-label\\\"> Categoría </label>\\n                    <input type=\\\"text\\\" formControlName=\\\"categoria\\\" [readonly]=\\\"true\\\" required\\n                      [class.is-invalid]=\\\"(categoria.invalid && categoria.touched)\\\"\\n                      class=\\\"form-control\\\" />\\n                    <small class=\\\"text-danger\\\" [class.d-none]=\\\"categoria.valid || categoria.untouched\\\">La categoría es requerida</small>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\n                <select formControlName=\\\"club\\\" required \\n                  [class.is-invalid]=\\\"club.invalid && club.touched\\\" class=\\\"custom-select\\\">\\n                  <option value=\\\"\\\"></option>\\n                  <option [value]=\\\"registro.nombre\\\" *ngFor=\\\"let registro of tblClubes\\\" >{{ registro.nombre }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.untouched || !club.hasError('required')\\\">El club es requerido</small>\\n              </div>\\n            </div>\\n          \\n            <div class=\\\"col-3\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"distancia\\\" class=\\\"control-label\\\"> Distancia </label>\\n                <select multiple #selectDistancia formControlName=\\\"distancia\\\" required size=\\\"9\\\"\\n                  [class.is-invalid]=\\\"distancia.invalid && distancia.touched\\\" class=\\\"custom-select\\\" >\\n                  <option [value]=\\\"registro.embarcacion + ' ' + registro.distancia\\\" \\n                    *ngFor=\\\"let registro of tblDistancias\\\" >{{ registro.embarcacion + ' ' + registro.distancia }}</option>\\n                </select>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"distancia.untouched || !distancia.hasError('required')\\\">La distancia es requerida</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header d-flex\\\">\\n    Inscripciones\\n    <a routerLink=\\\"/inscripciones/add\\\" class=\\\"text-primary ml-auto\\\">\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n    </a>\\n  </div>\\n</div>\\n\\n<table class=\\\"table table-bordered table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th>DNI </th>\\n      <th>Nombre </th>\\n      <th>Genero</th>\\n      <th>Categoría</th>\\n      <th>Carrera</th>\\n      <th> </th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.dni }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.palista }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.genero }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.categoria }} </td>\\n      <td routerLink=\\\"/inscripciones/edit/{{registro.id}}\\\"> {{ registro.distancia }} </td>\\n      <td>\\n        <a routerLink=\\\"/inscripciones/delete/{{registro.id}}\\\" class=\\\"text-danger ml-auto\\\">\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\n\r\nimport { ClubI } from '@models/club';\r\nimport { PalistaI } from '@models/palista';\r\nimport { CategoriaI } from '@models/categoria';\r\nimport { InscripcionI } from '@models/inscripcion';\r\nimport { DistanciaI } from '@models/distancia';\r\nimport { ArrayService } from '@services/array.service';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { map, switchMap, tap, mergeMap, concatMap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-inscripciones-form',\r\n  templateUrl: './inscripciones-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class InscripcionesFormComponent implements OnInit {\r\n  @ViewChild('selectDistancia', {static: true}) selectDistancia: ElementRef;\r\n\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n  tblClubes: ClubI[];\r\n  tblCategorias: CategoriaI[];\r\n  tblPalistas: PalistaI[];\r\n  tblInscripciones: InscripcionI[];\r\n  tblDistancias: DistanciaI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    \r\n    this.tblClubes = this.actRoute.snapshot.data['inscripcionData'][1];\r\n    this.tblCategorias = this.actRoute.snapshot.data['inscripcionData'][2];\r\n    this.tblPalistas = this.actRoute.snapshot.data['inscripcionData'][3];\r\n    this.tblInscripciones = this.actRoute.snapshot.data['inscripcionData'][4];\r\n\r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      palista: ['', [Validators.required, Validators.minLength(3)]],\r\n      dni: [''],\r\n      apellido: [''],\r\n      nombre: [''],\r\n      fnacimiento: [''],\r\n      genero: ['', [Validators.required]],\r\n      categoria: ['', [Validators.required]],\r\n      club: ['', [Validators.required]],\r\n      distancia: [[], [Validators.required]]\r\n\r\n    });\r\n    this.miForm.controls.club.disable();\r\n    \r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.actRoute.snapshot.data['inscripcionData'][0];\r\n    this.miForm.patchValue(record);\r\n    this.tblDistancias = this.distanciasDeLaCategoria(record.categoria);\r\n    this.marcarDistancias(record.distancia);\r\n    this.miForm.controls.palista.disable();\r\n    this.miForm.controls.club.disable();\r\n\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.distancia.disable();\r\n    }\r\n  }\r\n\r\n  get palista() {\r\n    return this.miForm.get('palista');\r\n  }\r\n  get genero() {\r\n    return this.miForm.get('genero');\r\n  }\r\n  get categoria() {\r\n    return this.miForm.get('categoria');\r\n  }\r\n  get club() {\r\n    return this.miForm.get('club');\r\n  } \r\n  get distancia() {\r\n    return this.miForm.get('distancia');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    this.miForm.controls.club.enable();\r\n    const record = { id: this.templateData.id,...this.miForm.value }\r\n    switch (this.templateData.titulo) {\r\n      case 'Agregar':\r\n        this.aceptarAgregar(record);\r\n        break;\r\n      case 'Modificar':\r\n        this.aceptarEditar(record);\r\n        break;\r\n      case 'Eliminar':\r\n        this.aceptarEliminar(record);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  aceptarAgregar(record: PalistaI) {\r\n    \r\n    this.crudService.addRecord$('inscripciones', record).subscribe(\r\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Agregado satisfactoriamente'),\r\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['inscripciones'])\r\n    );\r\n  }\r\n\r\n  aceptarEditar(record: PalistaI) {\r\n    this.crudService.updateRecord$('inscripciones', record.id, record).subscribe(\r\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['inscripciones'])\r\n    );\r\n  }\r\n\r\n  aceptarEliminar(record: PalistaI) {\r\n    this.crudService.deleteRecord$('inscripciones', record.id).subscribe(\r\n      _ => this.msg.ok(record.nombre.trim() + ' ' + record.apellido + ' Eliminado satisfactoriamente'),\r\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['inscripciones'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  selectPalista(valor) {\r\n    const palista = this.tblPalistas.find( element => element.palista === valor);\r\n    if (this.templateData.titulo === 'Agregar' && !!this.tblInscripciones.find( element => element.dni === palista.dni)) {\r\n      this.miForm.controls.palista.setValue('');\r\n      this.msg.warning(palista.palista + ' Ya está inscrito. Si lo desea modifique su inscripción');\r\n    } else {\r\n      this.miForm.patchValue(palista);\r\n      this.tblDistancias = this.distanciasDeLaCategoria(palista.categoria);\r\n    }\r\n  }\r\n\r\n  marcarDistancias(arrayDistancias){\r\n    const options = this.selectDistancia.nativeElement.options;\r\n    for ( let i = 0, len = options.length; i < len; i++ ) {\r\n      if ( arrayDistancias.indexOf( options[i].text ) != -1 ) {\r\n        options[i].selected = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  distanciasDeLaCategoria(categoria: string) {\r\n    let todasLasDistancias = this.actRoute.snapshot.data['inscripcionData'][5];\r\n    return todasLasDistancias.filter( data => data.categoria === categoria);\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-inscripciones',\n  templateUrl: './inscripciones.component.html',\n  styles: []\n})\nexport class InscripcionesComponent implements OnInit {\n  tabla: [];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['inscripcionData'];\n    console.table(this.tabla)\n    \n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\n\r\nimport { AuthService } from '@services/auth.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ClubI } from '@models/club';\r\nimport { InscripcionI } from '@models/Inscripcion';\r\nimport { CategoriaI } from '@models/categoria';\r\nimport { PalistaI } from '@models/palista';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { DistanciaI } from '@models/distancia';\r\n\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InscripcionesFormResolver \r\n    implements Resolve<[InscripcionI, ClubI[], CategoriaI[], PalistaI[], InscripcionI[], DistanciaI[] ]> {\r\n\r\n  constructor(private crudService: CrudService, private authService: AuthService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): \r\n    Observable<[InscripcionI, ClubI[], CategoriaI[], PalistaI[], InscripcionI[], DistanciaI[] ]> {\r\n    \r\n\r\n    const distancias$: Observable<DistanciaI[]> = this.crudService.getRecord$<CompetenciaI>('consola', '01').pipe(\r\n      map( data => data.idCompetencia.trim()),\r\n      mergeMap(idCompetencia => this.crudService.getRecord$<CompetenciaI>('competencias', idCompetencia)),\r\n      map(competencia => competencia.distancia as DistanciaI[])\r\n      );\r\n\r\n    const club = this.authService.getUser().club;\r\n    const id = route.paramMap.get('id');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('inscripciones',id),\r\n      this.crudService.getAllRecords$('clubes','nombre'),\r\n      this.crudService.getAllRecords$('categorias','desde'),\r\n      this.crudService.queryByField$('palistas','club',club),\r\n      this.crudService.queryByField$('inscripciones','club',club),\r\n      distancias$\r\n    );\r\n    \r\n    return allData$;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { InscripcionI } from '@models/inscripcion';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AuthService } from '@services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InscripcionesResolver implements Resolve<InscripcionI[]> {\n\n  constructor(private crudService: CrudService, private authService: AuthService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<InscripcionI[]> {\n    const club = this.authService.getUser().club;\n    return this.crudService.queryByField$('inscripciones','club',club);\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InscripcionesResolver } from './inscripciones-resolver.guard';\nimport { InscripcionesComponent } from './components/inscripciones.component';\nimport { InscripcionesFormComponent } from './components/inscripciones-form.component';\nimport { InscripcionesFormResolver } from './inscripciones-form-resolver.guard';\n\n\nconst routes: Routes = [\n  { path: '', resolve: { inscripcionData: InscripcionesResolver }, component: InscripcionesComponent },\n  { path: ':action', resolve: { inscripcionData: InscripcionesFormResolver}, component: InscripcionesFormComponent },\n  { path: ':action/:id', resolve: { inscripcionData: InscripcionesFormResolver }, component: InscripcionesFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InscripcionesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InscripcionesRoutingModule } from './inscripciones-routing.module';\nimport { InscripcionesComponent } from './components/inscripciones.component';\nimport { InscripcionesFormComponent } from './components/inscripciones-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [InscripcionesComponent, InscripcionesFormComponent],\n  imports: [\n    CommonModule, InscripcionesRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class InscripcionesModule { }\n"],"sourceRoot":"webpack:///"}