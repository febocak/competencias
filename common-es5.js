(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["common"],{/***/"./src/app/services/array.service.ts":/*!*******************************************!*\
  !*** ./src/app/services/array.service.ts ***!
  \*******************************************/ /*! exports provided: ArrayService */ /***/function srcAppServicesArrayServiceTs(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__);/* harmony export (binding) */__webpack_require__.d(__webpack_exports__,"ArrayService",function(){return ArrayService});/* harmony import */var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(/*! tslib */"./node_modules/tslib/tslib.es6.js");/* harmony import */var _angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(/*! @angular/core */"./node_modules/@angular/core/fesm2015/core.js");var ArrayService=/*#__PURE__*/function(){function ArrayService(){}var _proto=ArrayService.prototype;_proto.groupAndFlat=function groupAndFlat(source,parFields){var _this=this;var copySource=[].concat(source);copySource.sort(function(a,b){return _this.mayMinOrEqual(a,b,parFields)});var newArray=[];var group=this.concatFields(copySource[0],parFields);newArray.push(copySource[0]);for(var i=0;i<copySource.length;i++){var newGroup=this.concatFields(copySource[i],parFields);if(newGroup!==group){group=newGroup;newArray.push(copySource[i])}}return newArray};_proto.groupAndCount=function groupAndCount(source,parFields){var _this2=this;var copySource=[].concat(source);copySource.sort(function(a,b){return _this2.mayMinOrEqual(a,b,parFields)});var newArray=[];var i=0;while(i<copySource.length){var contador=0;var group=this.concatFields(copySource[i],parFields);var element=copySource[i];while(i<copySource.length&&group===this.concatFields(copySource[i],parFields)){i++;contador++}newArray.push(Object.assign({},element,{cantidad:contador}))}return newArray};_proto.groupAndSum=function groupAndSum(source,parFields,fieldSum){var _this3=this;var copySource=[].concat(source);copySource.sort(function(a,b){return _this3.mayMinOrEqual(a,b,parFields)});var newArray=[];var i=0;while(i<copySource.length){var suma=0;var group=this.concatFields(copySource[i],parFields);var element=copySource[i];while(i<copySource.length&&group===this.concatFields(copySource[i],parFields)){suma+=+copySource[i][fieldSum];i++}newArray.push(Object.assign({},element,{suma:suma}))}return newArray};_proto.concatFields=function concatFields(obj,fields){return fields.reduce(function(acc,el){return acc+obj[el].trim()},"")};_proto.mayMinOrEqual=function mayMinOrEqual(parA,parB,fields){var A=this.concatFields(parA,fields);var B=this.concatFields(parB,fields);if(A>B){return 1}if(B>A){return-1};return 0};return ArrayService}();ArrayService=tslib__WEBPACK_IMPORTED_MODULE_0__["__decorate"]([Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({providedIn:"root"})],ArrayService);/*

   --- ALGUNAS PRUEBAS ---
const contarArray = this.arrayService.groupAndCount(todasLasDistancias, ['embarcacion','distancia']);
    const sumarArray = this.arrayService.groupAndSum(todasLasDistancias, ['embarcacion','distancia'], 'distancia');
*/ /***/}}]);//# sourceMappingURL=common-es2015.js.map
//# sourceMappingURL=common-es5.js.map