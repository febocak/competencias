{"version":3,"sources":["./src/app/tables/usuarios/components/usuarios-form.component.html","./src/app/tables/usuarios/components/usuarios.component.html","./src/app/shared/compare-validator.directive.ts","./src/app/shared/shared.module.ts","./src/app/tables/usuarios/components/usuarios-form.component.ts","./src/app/tables/usuarios/components/usuarios.component.ts","./src/app/tables/usuarios/usuarios-form-resolver.guard.ts","./src/app/tables/usuarios/usuarios-resolver.guard.ts","./src/app/tables/usuarios/usuarios-routing.module.ts","./src/app/tables/usuarios/usuarios.module.ts"],"names":[],"mappings":"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","file":"tables-usuarios-usuarios-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\n\\n    <div class=\\\"card mt-3\\\">\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\n        {{ templateData.titulo + \\\" usuario\\\" }}\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\" class=\\\"control-label\\\"> Nombre </label>\\n            <input type=\\\"text\\\" formControlName=\\\"name\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n              [class.is-invalid]=\\\"name.invalid && name.touched\\\" class=\\\"form-control\\\" />\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"name.untouched || !name.hasError('required')\\\">El campo nombre es\\n              requerido</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"email\\\" class=\\\"control-label\\\"> Email </label>\\n            <input type=\\\"email\\\" formControlName=\\\"email\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\n              [class.is-invalid]=\\\"email.invalid && email.touched\\\" class=\\\"form-control\\\" />\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"email.untouched || !email.hasError('required')\\\">El campo email es\\n              requerido</small>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"email.untouched || !email.hasError('uniqueEmail')\\\">Ya existe un\\n              usuario con este email</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"rol\\\" class=\\\"control-label\\\"> Rol </label>\\n            <select formControlName=\\\"rol\\\" required [class.is-invalid]=\\\"rol.invalid && rol.touched\\\"\\n              class=\\\"custom-select\\\">\\n              <option value=\\\"rol\\\"></option>\\n              <option value=\\\"Inscripciones\\\">Inscripciones</option>\\n              <option value=\\\"Administración\\\">Administración</option>\\n              <option value=\\\"Competencias\\\">Competencias</option>\\n            </select>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"rol.untouched || !rol.hasError('required')\\\">El rol es\\n              requerido</small>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"rol.untouched || !rol.hasError('invalidGenero')\\\">Seleccione el\\n              rol</small>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\n            <select formControlName=\\\"club\\\" required [class.is-invalid]=\\\"club.invalid && club.touched\\\"\\n              class=\\\"custom-select\\\">\\n              <option value=\\\"club\\\"></option>\\n              <option [value]=\\\"item.nombre\\\" *ngFor=\\\"let item of tblClubes\\\">{{ item.nombre }}</option>\\n            </select>\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.valid || club.untouched\\\">El club es requerido</small>\\n          </div>\\n\\n          <div *ngIf=\\\"templateData.titulo === 'Agregar'\\\" class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password\\\" class=\\\"control-label\\\"> Contraseña </label>\\n                <input type=\\\"password\\\" formControlName=\\\"password\\\"\\n                  [class.is-invalid]=\\\"password.invalid && password.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.untouched || !password.hasError('required')\\\">El\\n                  campo contraseña es requerido</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password.untouched || !password.hasError('minlength')\\\">La\\n                  longitud mínima es de 6 caracteres</small>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"password2\\\" class=\\\"control-label\\\"> Confireme contraseña </label>\\n                <input type=\\\"password\\\" formControlName=\\\"password2\\\"\\n                  [class.is-invalid]=\\\"password2.invalid && password2.touched\\\" class=\\\"form-control\\\" />\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('required')\\\">El\\n                  campo contraseña es requerido</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('minlength')\\\">La\\n                  longitud mínima es de 6 caracteres</small>\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"password2.untouched || !password2.hasError('compare')\\\">La\\n                  contraseña y la confirmación no coinciden</small>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\" type=\\\"submit\\\"\\n                class=\\\"btn btn-block\\\">\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\n              </button>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\n                Cancelar\\n              </button>\\n            </div>\\n          </div>\\n\\n        </form>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\n  <div class=\\\"card-header d-flex\\\">\\n    Usuarios\\n    <a routerLink=\\\"/usuarios/add\\\" class=\\\"text-primary ml-auto\\\">\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\n    </a>\\n  </div>\\n</div>\\n\\n<table class=\\\"table table-bordered table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th> Nombre </th>\\n      <th> Email </th>\\n      <th> Rol </th>\\n      <th> Club </th>\\n      <th> </th>\\n    </tr>\\n  </thead>\\n\\n  <tbody>\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.name }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.email }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.rol }} </td>\\n      <td routerLink=\\\"/usuarios/edit/{{registro.id}}\\\"> {{ registro.club }} </td>\\n      <td class=\\\"text-center\\\">\\n        <a routerLink=\\\"/usuarios/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n\\n</table>\"","import { Directive, Input } from '@angular/core';\nimport { Validators, AbstractControl, ValidationErrors, NG_VALIDATORS, ValidatorFn } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\nexport function compareValidator(controlNameToCompare: string): ValidatorFn {\n  return (c: AbstractControl): ValidationErrors | null => {\n    if (c.value === null || c.value.length === 0) {\n      return null;\n    }\n    const controlToCompare = c.root.get(controlNameToCompare);\n    if (controlToCompare) {\n      const subscription: Subscription = controlToCompare.valueChanges.subscribe(() => {\n        c.updateValueAndValidity();\n        subscription.unsubscribe();\n      });\n      return controlToCompare && controlToCompare.value !== c.value ? {'compare': true} : null;\n    }\n  }\n}\n@Directive({\n  selector: '[compare]',\n  providers: [{\n    provide: NG_VALIDATORS, \n    useExisting: CompareValidatorDirective,\n    multi: true\n  }]\n})\nexport class CompareValidatorDirective implements Validators{\n  @Input('compare') controlNameToCompare: string;\n  \n  validate(c: AbstractControl): ValidationErrors {\n    return compareValidator(this.controlNameToCompare)(c);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompareValidatorDirective } from './compare-validator.directive';\n\n@NgModule({\n  declarations: [\n    CompareValidatorDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    CompareValidatorDirective\n  ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { AuthService } from '@services/auth.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { compareValidator } from '../../../shared/compare-validator.directive';\r\n\r\nimport { ClubI } from '@models/club';\r\nimport { UserI } from '@models/user';\r\n\r\n@Component({\r\n  selector: 'app-usuarios-form',\r\n  templateUrl: './usuarios-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class UsuariosFormComponent implements OnInit {\r\n  uniqueEmail;\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n  tblClubes: ClubI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private authService: AuthService,\r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    this.tblClubes = this.actRoute.snapshot.data['usuarioData'][1];\r\n\r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    \r\n    this.miForm = this.fb.group({\r\n      name: ['', [Validators.required] ],\r\n      email: ['', [Validators.required] ],\r\n      rol: ['', [Validators.required]],\r\n      club: ['', [Validators.required] ],\r\n      password: ['', [Validators.required, Validators.minLength(6)] ],\r\n      password2: ['', [Validators.required, Validators.minLength(6), compareValidator('password')] ]\r\n    });\r\n\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.miForm.removeControl('password');\r\n      this.miForm.removeControl('password2');\r\n    }\r\n\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.actRoute.snapshot.data['usuarioData'][0];\r\n    this.miForm.patchValue(record);\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.club.disable();\r\n      this.miForm.controls.rol.disable();\r\n    }\r\n  }\r\n\r\n  get name() {\r\n    return this.miForm.get('name');\r\n  }\r\n  get email() {\r\n    return this.miForm.get('email');\r\n  }\r\n  get club() {\r\n    return this.miForm.get('club');\r\n  }\r\n  get rol() {\r\n    return this.miForm.get('rol');\r\n  }\r\n  get password() {\r\n    return this.miForm.get('password');\r\n  }\r\n  get password2() {\r\n    return this.miForm.get('password2');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id,...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    switch (this.templateData.titulo) {\r\n      case 'Agregar':\r\n        this.aceptarAgregar(record);\r\n        break;\r\n      case 'Modificar':\r\n        this.aceptarEditar(record);\r\n        break;\r\n      case 'Eliminar':\r\n        this.aceptarEliminar(record);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  aceptarAgregar(record: UserI) {\r\n    this.crudService.addRecord$('users', record).subscribe(\r\n      _ => {\r\n        this.authService.afAuth.auth.createUserWithEmailAndPassword(record.email, record.password).then(\r\n          () => this.msg.ok(this.miForm.controls['name'].value + ' Agregado satisfactoriamente'),\r\n          error => this.msg.error('Error al agregar los datos: ' + error.statusText)\r\n        )\r\n      },\r\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['usuarios'])\r\n    );\r\n  }\r\n\r\n  aceptarEditar(record: UserI) {\r\n    this.crudService.updateRecord$('users', record.id, record).subscribe(\r\n      _ => this.msg.ok(record.name + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['usuarios'])\r\n    );\r\n  }\r\n\r\n  aceptarEliminar(record: UserI) {\r\n    this.crudService.deleteRecord$('users', record.id).subscribe(\r\n      _ => this.msg.ok(record.name + ' Eliminado satisfactoriamente'),\r\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['usuarios'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.actRoute.snapshot.data['usuarioData'][2];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con este email');\r\n    errorMessages.push('Ya hay otro registro con este nombre');\r\n    const objSearch = [];\r\n    objSearch.push({ email: record.email });\r\n    objSearch.push({ name: record.name });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const encontro = this.arrayService.find(tabla, objSearch[i]);\r\n      if (!!encontro) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(record.id !== encontro.id) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-usuarios',\n  templateUrl: './usuarios.component.html',\n  styles: []\n})\nexport class UsuariosComponent implements OnInit {\n  tabla = [];\n  constructor( private route: ActivatedRoute ) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['usuarioData'];\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable, forkJoin } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { CrudService } from '@services/crud.service';\nimport { ClubI } from '@models/club';\nimport { UserI } from '@models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosFormResolver implements Resolve<[UserI, ClubI[], UserI[]]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<[UserI, ClubI[], UserI[]]> {\n    const id = route.paramMap.get('id');\n    const allData$ = forkJoin(\n      this.crudService.getRecord$('users',id),\n      this.crudService.getAllRecords$('clubes','nombre'),\n      this.crudService.getAllRecords$('users','name')\n    );\n    \n    return allData$;\n  }\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { UserI } from '@models/user';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosResolver implements Resolve<UserI[]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<UserI[]> {\n    return this.crudService.getAllRecords$('users','name');\n  }\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UsuariosComponent } from './components/usuarios.component';\r\nimport { UsuariosFormComponent } from './components/usuarios-form.component';\r\nimport { UsuariosResolver } from './usuarios-resolver.guard';\r\nimport { UsuariosFormResolver } from './usuarios-form-resolver.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', resolve: { usuarioData: UsuariosResolver }, component: UsuariosComponent },\r\n  { path: ':action', resolve: { usuarioData: UsuariosFormResolver }, component: UsuariosFormComponent },\r\n  { path: ':action/:id', resolve: { usuarioData: UsuariosFormResolver }, component: UsuariosFormComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UsuariosRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UsuariosRoutingModule } from './usuarios-routing.module';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { UsuariosComponent } from './components/usuarios.component';\nimport { UsuariosFormComponent } from './components/usuarios-form.component';\n\n@NgModule({\n  declarations: [UsuariosComponent, UsuariosFormComponent],\n  imports: [\n    CommonModule, UsuariosRoutingModule,\n    FormsModule, ReactiveFormsModule,\n    SharedModule\n  ]\n})\nexport class UsuariosModule { }\n"],"sourceRoot":"webpack:///"}