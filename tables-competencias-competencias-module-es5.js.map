{"version":3,"sources":["src/app/tables/competencias/components/competencias-form.component.html","src/app/tables/competencias/components/competencias.component.html","src/app/tables/competencias/competencias-form-resolver.guard.ts","src/app/tables/competencias/competencias-resolver.guard.ts","src/app/tables/competencias/competencias-routing.module.ts","src/app/tables/competencias/competencias.module.ts","src/app/tables/competencias/components/competencias-form.component.ts","src/app/tables/competencias/components/competencias.component.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\r\\n\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\r\\n        {{ templateData.titulo + \\\" Compentencia\\\" }}\\r\\n        \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"desde\\\" class=\\\"control-label\\\"> Desde </label>\\r\\n                <input type=\\\"date\\\" formControlName=\\\"desde\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"desde.invalid && desde.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"desde.untouched || !desde.hasError('required')\\\">El campo desde es requerido</small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"hasta\\\" class=\\\"control-label\\\"> hasta </label>\\r\\n                <input type=\\\"date\\\" formControlName=\\\"hasta\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"hasta.invalid && hasta.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"hasta.untouched || !hasta.hasError('required')\\\">El campo hasta es requerido</small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"competencia\\\" class=\\\"control-label\\\"> Descripción </label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"competencia\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\" required maxlength=\\\"80\\\"\\r\\n              [class.is-invalid]=\\\"competencia.invalid && competencia.touched\\\" class=\\\"form-control\\\" />\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('required')\\\">La descripción es requerida</small>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('minlength')\\\">La longitud mínima es 2</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"tipoDeCompetencia\\\" class=\\\"control-label\\\"> Tipo </label>\\r\\n            <select formControlName=\\\"tipoDeCompetencia\\\" required\\r\\n              [class.is-invalid]=\\\"tipoDeCompetencia.invalid && tipoDeCompetencia.touched\\\" class=\\\"custom-select\\\">\\r\\n              <option value=\\\"tipoDeCompetencia\\\"></option>\\r\\n              <option [value]=\\\"registro.tipo\\\" *ngFor=\\\"let registro of tblTipos\\\" >{{ registro.tipo }}</option>\\r\\n            </select>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"tipoDeCompetencia.untouched || !tipoDeCompetencia.hasError('required')\\\">El tipo es requerido</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\r\\n            <select formControlName=\\\"club\\\" required\\r\\n              [class.is-invalid]=\\\"club.invalid && club.touched\\\" class=\\\"custom-select\\\">\\r\\n              <option value=\\\"club\\\"></option>\\r\\n              <option [value]=\\\"registro.nombre\\\" *ngFor=\\\"let registro of tblClubes\\\" >{{ registro.nombre }}</option>\\r\\n            </select>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.untouched || !club.hasError('required')\\\">El club es requerido</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\r\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\r\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\r\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\r\\n                Cancelar\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\r\\n  <div class=\\\"card-header d-flex\\\">\\r\\n    Competencias\\r\\n    <a routerLink=\\\"/competencias/add\\\" class=\\\"text-primary ml-auto\\\">\\r\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table table-bordered table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th> Desde </th>\\r\\n      <th> Hasta </th>\\r\\n      <th> Competencia </th>\\r\\n      <th> Tipo </th>\\r\\n      <th> Club </th>\\r\\n      <th> </th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.desde | date :'dd-MMM-yyyy' }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.hasta | date :'dd-MMM-yyyy' }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.competencia }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.tipoDeCompetencia }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.club }} </td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <a routerLink=\\\"/competencias/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\r\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\"","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { ClubI } from '@models/club';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompetenciasFormResolver implements Resolve<[CompetenciaI, ClubI[], TipoDeCompetenciaI[], CompetenciaI[]]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<[CompetenciaI, ClubI[], TipoDeCompetenciaI[], CompetenciaI[]]> {\r\n    const id = route.paramMap.get('id');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('competencias',id),\r\n      this.crudService.getAllRecords$('clubes','nombre'),\r\n      this.crudService.getAllRecords$('tipos-de-competencias'),\r\n      this.crudService.getAllRecords$('competencias')\r\n    );\r\n    \r\n    return allData$;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ClubI } from '@models/club';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetenciasResolver implements Resolve<ClubI[]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<ClubI[]> {\n    return this.crudService.getAllRecords$('competencias','competencia');\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompetenciasResolver } from './competencias-resolver.guard';\nimport { CompetenciasComponent } from './components/competencias.component';\n\nimport { CompetenciasFormResolver } from './competencias-form-resolver.guard';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\nconst routes: Routes = [\n  { path: '', resolve: { competenciaData: CompetenciasResolver }, component: CompetenciasComponent },\n  { path: ':action', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent },\n  { path: ':action/:id', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompetenciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompetenciasRoutingModule } from './competencias-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CompetenciasComponent } from './components/competencias.component';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\n@NgModule({\n  declarations: [ CompetenciasComponent, CompetenciasFormComponent ],\n  imports: [\n    CommonModule, CompetenciasRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class CompetenciasModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { ClubI } from '@models/club';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Component({\r\n  selector: 'app-competencias-form',\r\n  templateUrl: './competencias-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class CompetenciasFormComponent implements OnInit {\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n  tblClubes: ClubI[];\r\n  tblTipos: TipoDeCompetenciaI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    this.tblClubes = this.actRoute.snapshot.data['competenciaData'][1];\r\n    this.tblTipos = this.actRoute.snapshot.data['competenciaData'][2];\r\n\r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      desde: ['', [Validators.required] ],\r\n      hasta: ['', [Validators.required] ],\r\n      competencia: ['', [Validators.required, Validators.minLength(3)] ],\r\n      tipoDeCompetencia: ['', [Validators.required] ],\r\n      club: ['', [Validators.required] ]\r\n    });\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.actRoute.snapshot.data['competenciaData'][0];\r\n    this.miForm.patchValue(record);\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.club.disable();\r\n      this.miForm.controls.tipoDeCompetencia.disable();\r\n    }\r\n  }\r\n\r\n  get desde() {\r\n    return this.miForm.get('desde');\r\n  }\r\n  get hasta() {\r\n    return this.miForm.get('hasta');\r\n  }\r\n  get competencia() {\r\n    return this.miForm.get('competencia');\r\n  }\r\n  get tipoDeCompetencia() {\r\n    return this.miForm.get('tipoDeCompetencia');\r\n  }\r\n  get club() {\r\n    return this.miForm.get('club');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id,...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    switch (this.templateData.titulo) {\r\n      case 'Agregar':\r\n        this.aceptarAgregar(record);\r\n        break;\r\n      case 'Modificar':\r\n        this.aceptarEditar(record);\r\n        break;\r\n      case 'Eliminar':\r\n        this.aceptarEliminar(record);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  aceptarAgregar(record: CompetenciaI) {\r\n    this.crudService.addRecord$('competencias', record).subscribe(\r\n      _ => this.msg.ok(this.miForm.controls['competencia'].value + ' Agregado satisfactoriamente'),\r\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEditar(record: CompetenciaI) {\r\n    this.crudService.updateRecord$('competencias', record.id, record).subscribe(\r\n      _ => this.msg.ok(record.competencia + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEliminar(record: CompetenciaI) {\r\n    this.crudService.deleteRecord$('competencias', record.id).subscribe(\r\n      _ => this.msg.ok(record.competencia + ' Eliminado satisfactoriamente'),\r\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.actRoute.snapshot.data['competenciaData'][3];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo desde');\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo hasta');\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo descripción');\r\n    const objSearch = [];\r\n    objSearch.push({ desde: record.desde });\r\n    objSearch.push({ hasta: record.hasta });\r\n    objSearch.push({ competencia: record.competencia });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const encontro = this.arrayService.find(tabla, objSearch[i]);\r\n      if (!!encontro) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(record.id !== encontro.id) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-competencias',\n  templateUrl: './competencias.component.html',\n  styles: []\n})\nexport class CompetenciasComponent implements OnInit {\n  tabla: [];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['competenciaData'];\n  }\n\n}\n"],"sourceRoot":"webpack:///"}