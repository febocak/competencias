{"version":3,"sources":["src/app/services/array.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArrayService {\n\n  constructor() { }\n\n  groupAndFlat(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n    let group = this.concatFields(copySource[0], parFields);\n    newArray.push(copySource[0]);\n\n    for (let i = 0; i < copySource.length; i++) {\n      let newGroup = this.concatFields(copySource[i], parFields)\n      if ( newGroup !== group ) {\n        group = newGroup;\n        newArray.push(copySource[i]);\n      }\n    }\n\n    return newArray;\n  }\n\n  groupAndCount(source: any[], parFields: string[]) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let contador = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        i++;\n        contador++;\n      }\n      newArray.push({...element, cantidad: contador});\n    }\n\n    return newArray;\n  }\n\n  groupAndSum(source: any[], parFields: string[], fieldSum: number | string) {\n    const copySource = [...source];\n    copySource.sort( (a, b) => this.mayMinOrEqual(a,b, parFields));\n    \n    let newArray = [];\n\n    let i = 0; \n    while (i < copySource.length) {\n      let suma = 0;\n      let group = this.concatFields(copySource[i], parFields);\n      let element = copySource[i];\n      while (i < copySource.length && group === this.concatFields(copySource[i], parFields)) {\n        suma += +copySource[i][fieldSum];\n        i++;\n      }\n      newArray.push({...element, suma});\n    }\n\n    return newArray;\n  }\n\n  concatFields(obj: any, fields: string[]) {\n    return fields.reduce( (acc, el) => acc + obj[el].trim(), '');\n  }\n\n  mayMinOrEqual(parA: any, parB: any, fields: string[]) {\n    const A = this.concatFields(parA, fields);\n    const B = this.concatFields(parB, fields);\n\n    if (A > B ) {\n      return 1;\n    }\n    if (B > A ) {\n      return -1;\n    };\n    return 0\n\n  }\n\n}\n\n/*\n\n   --- ALGUNAS PRUEBAS ---\nconst contarArray = this.arrayService.groupAndCount(todasLasDistancias, ['embarcacion','distancia']);\n    const sumarArray = this.arrayService.groupAndSum(todasLasDistancias, ['embarcacion','distancia'], 'distancia');\n*/"],"sourceRoot":"webpack:///"}