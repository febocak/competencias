{"version":3,"sources":["./src/app/tables/tipos-de-competencias/components/tipos-de-competencias-form.component.html","./src/app/tables/tipos-de-competencias/components/tipos-de-competencias.component.html","./src/app/tables/tipos-de-competencias/components/tipos-de-competencias-form.component.ts","./src/app/tables/tipos-de-competencias/components/tipos-de-competencias.component.ts","./src/app/tables/tipos-de-competencias/tipos-de-competencias-form-resolver.guard.ts","./src/app/tables/tipos-de-competencias/tipos-de-competencias-resolver.guard.ts","./src/app/tables/tipos-de-competencias/tipos-de-competencias-routing.module.ts","./src/app/tables/tipos-de-competencias/tipos-de-competencias.module.ts"],"names":[],"mappings":"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","file":"tables-tipos-de-competencias-tipos-de-competencias-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\r\\n\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\r\\n        {{ templateData.titulo + \\\" tipo de competencia\\\" }}\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"tipo\\\" class=\\\"control-label\\\"> Tipo </label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"tipo\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n              [class.is-invalid]=\\\"tipo.invalid && tipo.touched\\\" class=\\\"form-control\\\" />\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"tipo.untouched || !tipo.hasError('required')\\\">El tipo es requerido</small>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"tipo.untouched || !tipo.hasError('minlength')\\\">La longitud mínima es 3</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"descripcion\\\" class=\\\"control-label\\\"> Descripción </label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"descripcion\\\" maxlength=\\\"80\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n              [class.is-invalid]=\\\"descripcion.invalid && descripcion.touched\\\" class=\\\"form-control\\\" />\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"descripcion.untouched || !descripcion.hasError('required')\\\">La descripción es requerida</small>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"descripcion.untouched || !descripcion.hasError('minlength')\\\">La longitud mínima es 10</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\r\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\r\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\r\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\r\\n                Cancelar\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\r\\n  <div class=\\\"card-header d-flex\\\">\\r\\n    Tipos de competencias\\r\\n    <a routerLink=\\\"/tipos-de-competencias/add\\\" class=\\\"text-primary ml-auto\\\">\\r\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table table-bordered table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th> Tipo </th>\\r\\n      <th> Descripción </th>\\r\\n      <th> Distancias </th>\\r\\n      <th> </th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\r\\n      <td routerLink=\\\"/tipos-de-competencias/edit/{{registro.id}}\\\"> {{ registro.tipo }} </td>\\r\\n      <td routerLink=\\\"/tipos-de-competencias/edit/{{registro.id}}\\\"> {{ registro.descripcion }} </td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <a routerLink=\\\"/distancias/{{registro.id}}\\\" class=\\\"text-primary\\\">\\r\\n          <i class=\\\"fa fa-cogs fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <a routerLink=\\\"/tipos-de-competencias/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\r\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Component({\r\n  selector: 'app-tipos-de-competencias-form',\r\n  templateUrl: './tipos-de-competencias-form.component.html',\r\n  styles: []\r\n})\r\nexport class TiposDeCompetenciasFormComponent implements OnInit {\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n\r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      tipo: ['', [Validators.required] ],\r\n      descripcion: ['', [Validators.required, Validators.minLength(10)]]\r\n    });\r\n\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.actRoute.snapshot.data['tipoDeCompetenciaData'][0];\r\n    this.miForm.patchValue(record);\r\n  }\r\n\r\n  get tipo() {\r\n    return this.miForm.get('tipo');\r\n  }\r\n  get descripcion() {\r\n    return this.miForm.get('descripcion');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id,...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n    \r\n    switch (this.templateData.titulo) {\r\n      case 'Agregar':\r\n        this.aceptarAgregar(record);\r\n        break;\r\n      case 'Modificar':\r\n        this.aceptarEditar(record);\r\n        break;\r\n      case 'Eliminar':\r\n        this.aceptarEliminar(record);\r\n        break;\r\n    }\r\n \r\n  }\r\n  \r\n  aceptarAgregar(record: TipoDeCompetenciaI) {\r\n    this.crudService.addRecord$('tipos-de-competencias', record).subscribe(\r\n      _ => this.msg.ok(this.miForm.controls['tipo'].value + ' Agregado satisfactoriamente'),\r\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['tipos-de-competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEditar(record: TipoDeCompetenciaI) {\r\n    this.crudService.updateRecord$('tipos-de-competencias', record.id, record).subscribe(\r\n      _ => this.msg.ok(record.tipo + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['tipos-de-competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEliminar(record: TipoDeCompetenciaI) {\r\n    this.crudService.deleteRecord$('tipos-de-competencias', record.id).subscribe(\r\n      _ => this.msg.ok(record.tipo + ' Eliminado satisfactoriamente'),\r\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['tipos-de-competencias'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.actRoute.snapshot.data['tipoDeCompetenciaData'][1];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con el mismo tipo');\r\n    errorMessages.push('Ya hay otro registro con la mismas descripción');\r\n    const objSearch = [];\r\n    objSearch.push({ tipo: record.tipo });\r\n    objSearch.push({ descripcion: record.descripcion });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const encontro = this.arrayService.find(tabla, objSearch[i]);\r\n      if (!!encontro) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(record.id !== encontro.id) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-tipos-de-competencias',\r\n  templateUrl: './tipos-de-competencias.component.html',\r\n  styles: []\r\n})\r\nexport class TiposDeCompetenciasComponent implements OnInit {\r\n  tabla = [];\r\n  constructor( private route: ActivatedRoute ) { }\r\n\r\n  ngOnInit() {\r\n    this.tabla = this.route.snapshot.data['tipoDeCompetenciaData'];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposDeCompetenciasFormResolver implements Resolve<[ TipoDeCompetenciaI, TipoDeCompetenciaI[] ]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<[ TipoDeCompetenciaI, TipoDeCompetenciaI[] ]> {\r\n    const id = route.paramMap.get('id');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('tipos-de-competencias',id),\r\n      this.crudService.getAllRecords$('tipos-de-competencias','tipo')\r\n    );\r\n    return  allData$;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TiposDeCompeteciasResolver implements Resolve<TipoDeCompetenciaI[]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<TipoDeCompetenciaI[]> {\r\n    return this.crudService.getAllRecords$('tipos-de-competencias','tipo');\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { TiposDeCompetenciasComponent } from './components/tipos-de-competencias.component';\r\nimport { TiposDeCompetenciasFormComponent } from './components/tipos-de-competencias-form.component';\r\nimport { TiposDeCompeteciasResolver } from './tipos-de-competencias-resolver.guard';\r\nimport { TiposDeCompetenciasFormResolver } from './tipos-de-competencias-form-resolver.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { \r\n    path: '', \r\n    resolve: { tipoDeCompetenciaData: TiposDeCompeteciasResolver }, \r\n    component: TiposDeCompetenciasComponent\r\n  },\r\n  { \r\n    path: ':action', \r\n    resolve: { tipoDeCompetenciaData: TiposDeCompetenciasFormResolver }, \r\n    component: TiposDeCompetenciasFormComponent\r\n  },\r\n  { \r\n    path: ':action/:id', \r\n    resolve: { tipoDeCompetenciaData: TiposDeCompetenciasFormResolver }, \r\n    component: TiposDeCompetenciasFormComponent\r\n   }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TiposDeCompetenciasRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { TiposDeCompetenciasRoutingModule } from './tipos-de-competencias-routing.module';\r\nimport { TiposDeCompetenciasComponent } from './components/tipos-de-competencias.component';\r\nimport { TiposDeCompetenciasFormComponent } from './components/tipos-de-competencias-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TiposDeCompetenciasComponent, TiposDeCompetenciasFormComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    TiposDeCompetenciasRoutingModule,\r\n    FormsModule, ReactiveFormsModule\r\n  ]\r\n})\r\nexport class TiposDeCompetenciasModule { }\r\n"],"sourceRoot":"webpack:///"}