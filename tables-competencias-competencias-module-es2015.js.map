{"version":3,"sources":["./src/app/tables/competencias/components/competencias-form.component.html","./src/app/tables/competencias/components/competencias.component.html","./src/app/tables/competencias/competencias-form-resolver.guard.ts","./src/app/tables/competencias/competencias-resolver.guard.ts","./src/app/tables/competencias/competencias-routing.module.ts","./src/app/tables/competencias/competencias.module.ts","./src/app/tables/competencias/components/competencias-form.component.ts","./src/app/tables/competencias/components/competencias.component.ts"],"names":[],"mappings":"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","file":"tables-competencias-competencias-module-es2015.js","sourcesContent":["export default \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-12 col-md-8 col-lg-6 mx-auto\\\">\\r\\n\\r\\n    <div class=\\\"card mt-3\\\">\\r\\n      <div class=\\\"card-header\\\" [ngClass]=\\\"templateData.cardHeaderStyle\\\">\\r\\n        {{ templateData.titulo + \\\" Compentencia\\\" }}\\r\\n        \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <form [formGroup]=\\\"miForm\\\" (ngSubmit)=\\\"onSubmit(submitBtn)\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"desde\\\" class=\\\"control-label\\\"> Desde </label>\\r\\n                <input type=\\\"date\\\" formControlName=\\\"desde\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"desde.invalid && desde.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"desde.untouched || !desde.hasError('required')\\\">El campo desde es requerido</small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"hasta\\\" class=\\\"control-label\\\"> hasta </label>\\r\\n                <input type=\\\"date\\\" formControlName=\\\"hasta\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\"\\r\\n                  [class.is-invalid]=\\\"hasta.invalid && hasta.touched\\\" class=\\\"form-control\\\" />\\r\\n                <small class=\\\"text-danger\\\" [class.d-none]=\\\"hasta.untouched || !hasta.hasError('required')\\\">El campo hasta es requerido</small>\\r\\n              </div>\\r\\n\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"competencia\\\" class=\\\"control-label\\\"> Descripción </label>\\r\\n            <input type=\\\"text\\\" formControlName=\\\"competencia\\\" [readonly]=\\\"templateData.titulo==='Eliminar'\\\" required maxlength=\\\"80\\\"\\r\\n              [class.is-invalid]=\\\"competencia.invalid && competencia.touched\\\" class=\\\"form-control\\\" />\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('required')\\\">La descripción es requerida</small>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"competencia.untouched || !competencia.hasError('minlength')\\\">La longitud mínima es 2</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"tipoDeCompetencia\\\" class=\\\"control-label\\\"> Tipo </label>\\r\\n            <select formControlName=\\\"tipoDeCompetencia\\\" required\\r\\n              [class.is-invalid]=\\\"tipoDeCompetencia.invalid && tipoDeCompetencia.touched\\\" class=\\\"custom-select\\\">\\r\\n              <option value=\\\"tipoDeCompetencia\\\"></option>\\r\\n              <option [value]=\\\"registro.tipo\\\" *ngFor=\\\"let registro of tblTipos\\\" >{{ registro.tipo }}</option>\\r\\n            </select>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"tipoDeCompetencia.untouched || !tipoDeCompetencia.hasError('required')\\\">El tipo es requerido</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label for=\\\"club\\\" class=\\\"control-label\\\"> Club </label>\\r\\n            <select formControlName=\\\"club\\\" required\\r\\n              [class.is-invalid]=\\\"club.invalid && club.touched\\\" class=\\\"custom-select\\\">\\r\\n              <option value=\\\"club\\\"></option>\\r\\n              <option [value]=\\\"registro.nombre\\\" *ngFor=\\\"let registro of tblClubes\\\" >{{ registro.nombre }}</option>\\r\\n            </select>\\r\\n            <small class=\\\"text-danger\\\" [class.d-none]=\\\"club.untouched || !club.hasError('required')\\\">El club es requerido</small>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button [disabled]=\\\"!miForm.valid\\\" #submitBtn\\r\\n                [ngClass]=\\\"templateData.titulo==='Eliminar' ? 'btn-danger' : 'btn-primary'\\\"\\r\\n                type=\\\"submit\\\" class=\\\"btn btn-block\\\">\\r\\n                {{ templateData.titulo === 'Eliminar' ? 'Eliminar' : 'Aceptar' }}\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-6\\\">\\r\\n              <button type=\\\"button\\\" class=\\\"btn btn-secondary btn-block\\\" (click)=\\\"goBack()\\\">\\r\\n                Cancelar\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"card mt-3\\\">\\r\\n  <div class=\\\"card-header d-flex\\\">\\r\\n    Competencias\\r\\n    <a routerLink=\\\"/competencias/add\\\" class=\\\"text-primary ml-auto\\\">\\r\\n      <i class=\\\"fa fa-plus-circle fa-2x\\\"></i>\\r\\n    </a>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<table class=\\\"table table-bordered table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th> Desde </th>\\r\\n      <th> Hasta </th>\\r\\n      <th> Competencia </th>\\r\\n      <th> Tipo </th>\\r\\n      <th> Club </th>\\r\\n      <th> </th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let registro of tabla\\\">\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.desde | date :'dd-MMM-yyyy' }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.hasta | date :'dd-MMM-yyyy' }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.competencia }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.tipoDeCompetencia }} </td>\\r\\n      <td routerLink=\\\"/competencias/edit/{{registro.id}}\\\"> {{ registro.club }} </td>\\r\\n      <td class=\\\"text-center\\\">\\r\\n        <a routerLink=\\\"/competencias/delete/{{registro.id}}\\\" class=\\\"text-danger\\\">\\r\\n          <i class=\\\"fa fa-minus-circle fa-2x\\\"></i>\\r\\n        </a>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n\\r\\n</table>\"","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { first } from 'rxjs/operators';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { ClubI } from '@models/club';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CompetenciasFormResolver implements Resolve<[CompetenciaI, ClubI[], TipoDeCompetenciaI[], CompetenciaI[]]> {\r\n\r\n  constructor(private crudService: CrudService) { }\r\n\r\n  resolve(route: ActivatedRouteSnapshot,\r\n          state: RouterStateSnapshot): Observable<[CompetenciaI, ClubI[], TipoDeCompetenciaI[], CompetenciaI[]]> {\r\n    const id = route.paramMap.get('id');\r\n    const allData$ = forkJoin(\r\n      this.crudService.getRecord$('competencias',id),\r\n      this.crudService.getAllRecords$('clubes','nombre'),\r\n      this.crudService.getAllRecords$('tipos-de-competencias'),\r\n      this.crudService.getAllRecords$('competencias')\r\n    );\r\n    \r\n    return allData$;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CrudService } from '@services/crud.service';\nimport { Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { ClubI } from '@models/club';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompetenciasResolver implements Resolve<ClubI[]> {\n\n  constructor(private crudService: CrudService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<ClubI[]> {\n    return this.crudService.getAllRecords$('competencias','competencia');\n  }\n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompetenciasResolver } from './competencias-resolver.guard';\nimport { CompetenciasComponent } from './components/competencias.component';\n\nimport { CompetenciasFormResolver } from './competencias-form-resolver.guard';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\nconst routes: Routes = [\n  { path: '', resolve: { competenciaData: CompetenciasResolver }, component: CompetenciasComponent },\n  { path: ':action', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent },\n  { path: ':action/:id', resolve: { competenciaData: CompetenciasFormResolver }, component: CompetenciasFormComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CompetenciasRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CompetenciasRoutingModule } from './competencias-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CompetenciasComponent } from './components/competencias.component';\nimport { CompetenciasFormComponent } from './components/competencias-form.component';\n\n@NgModule({\n  declarations: [ CompetenciasComponent, CompetenciasFormComponent ],\n  imports: [\n    CommonModule, CompetenciasRoutingModule,\n    FormsModule, ReactiveFormsModule\n  ]\n})\nexport class CompetenciasModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\n\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\nimport { MessageService } from '@core/message/message.service';\r\nimport { CrudService } from '@services/crud.service';\r\nimport { ArrayService } from '@services/array.service';\r\n\r\nimport { ClubI } from '@models/club';\r\nimport { CompetenciaI } from '@models/competencia';\r\nimport { TipoDeCompetenciaI } from '@models/tipo-de-competencia';\r\n\r\n@Component({\r\n  selector: 'app-competencias-form',\r\n  templateUrl: './competencias-form.component.html',\r\n  styles: ['']\r\n})\r\nexport class CompetenciasFormComponent implements OnInit {\r\n  templateData = { titulo: '', cardHeaderStyle: '', id: '' };\r\n  miForm: FormGroup;\r\n  tblClubes: ClubI[];\r\n  tblTipos: TipoDeCompetenciaI[];\r\n\r\n  constructor(\r\n    private crudService: CrudService, \r\n    private fb: FormBuilder,      \r\n    private msg: MessageService,\r\n    private location: Location, \r\n    private actRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private arrayService: ArrayService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.msg.clearMessages();\r\n    this.tblClubes = this.actRoute.snapshot.data['competenciaData'][1];\r\n    this.tblTipos = this.actRoute.snapshot.data['competenciaData'][2];\r\n\r\n    const action = this.actRoute.snapshot.paramMap.get('action');\r\n    this.templateData.titulo = this.getTitle(action);\r\n    this.templateData.cardHeaderStyle = this.getClassHeader(action);\r\n    this.templateData.id = this.actRoute.snapshot.paramMap.get('id');\r\n\r\n    this.buildForm();\r\n    if (this.templateData.titulo !== 'Agregar') {\r\n      this.setFormData();\r\n    }\r\n  }\r\n\r\n  buildForm() {\r\n    this.miForm = this.fb.group({\r\n      desde: ['', [Validators.required] ],\r\n      hasta: ['', [Validators.required] ],\r\n      competencia: ['', [Validators.required, Validators.minLength(3)] ],\r\n      tipoDeCompetencia: ['', [Validators.required] ],\r\n      club: ['', [Validators.required] ]\r\n    });\r\n  }\r\n\r\n  setFormData() {\r\n    const record = this.actRoute.snapshot.data['competenciaData'][0];\r\n    this.miForm.patchValue(record);\r\n    if (this.templateData.titulo==='Eliminar') {\r\n      this.miForm.controls.club.disable();\r\n      this.miForm.controls.tipoDeCompetencia.disable();\r\n    }\r\n  }\r\n\r\n  get desde() {\r\n    return this.miForm.get('desde');\r\n  }\r\n  get hasta() {\r\n    return this.miForm.get('hasta');\r\n  }\r\n  get competencia() {\r\n    return this.miForm.get('competencia');\r\n  }\r\n  get tipoDeCompetencia() {\r\n    return this.miForm.get('tipoDeCompetencia');\r\n  }\r\n  get club() {\r\n    return this.miForm.get('club');\r\n  }\r\n\r\n  onSubmit(submitBtn: HTMLButtonElement) {\r\n    submitBtn.disabled = true;\r\n    const record = { id: this.templateData.id,...this.miForm.value }\r\n\r\n    if (this.templateData.titulo !== 'Eliminar' && !this.validations(record)) {\r\n      submitBtn.disabled = false;\r\n      return;\r\n    }\r\n\r\n    switch (this.templateData.titulo) {\r\n      case 'Agregar':\r\n        this.aceptarAgregar(record);\r\n        break;\r\n      case 'Modificar':\r\n        this.aceptarEditar(record);\r\n        break;\r\n      case 'Eliminar':\r\n        this.aceptarEliminar(record);\r\n        break;\r\n    }\r\n  }\r\n  \r\n  aceptarAgregar(record: CompetenciaI) {\r\n    this.crudService.addRecord$('competencias', record).subscribe(\r\n      _ => this.msg.ok(this.miForm.controls['competencia'].value + ' Agregado satisfactoriamente'),\r\n      error => this.msg.error('Error al agregar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEditar(record: CompetenciaI) {\r\n    this.crudService.updateRecord$('competencias', record.id, record).subscribe(\r\n      _ => this.msg.ok(record.competencia + ' Actualizado satisfactoriamente'),\r\n      error => this.msg.error('Error al actualizar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  aceptarEliminar(record: CompetenciaI) {\r\n    this.crudService.deleteRecord$('competencias', record.id).subscribe(\r\n      _ => this.msg.ok(record.competencia + ' Eliminado satisfactoriamente'),\r\n      error => this.msg.error('Error al eliminar los datos: ' + error.statusText),\r\n      () => this.router.navigate(['competencias'])\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.location.back();\r\n  }\r\n\r\n  getTitle(action: string) {\r\n    const objTitle= {add:'Agregar', edit: 'Modificar', delete: 'Eliminar'};\r\n    return objTitle[action];\r\n  }\r\n  \r\n  getClassHeader(action: string) {\r\n    const objStyle = {add:'bg-primary', edit: 'bg-warning', delete: 'bg-danger'};\r\n    return objStyle[action];\r\n  }\r\n\r\n  validations(record) {\r\n    const tabla = this.actRoute.snapshot.data['competenciaData'][3];\r\n    const errorMessages = [];\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo desde');\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo hasta');\r\n    errorMessages.push('Ya hay otro registro con el mismo valor para el campo descripción');\r\n    const objSearch = [];\r\n    objSearch.push({ desde: record.desde });\r\n    objSearch.push({ hasta: record.hasta });\r\n    objSearch.push({ competencia: record.competencia });\r\n\r\n    for (let i = 0; i < objSearch.length; i++) {\r\n      const encontro = this.arrayService.find(tabla, objSearch[i]);\r\n      if (!!encontro) {\r\n        if (this.templateData.titulo === 'Agregar') {\r\n          this.msg.warning(errorMessages[i]);\r\n          return false;\r\n        } else {\r\n          if(record.id !== encontro.id) {\r\n            this.msg.warning(errorMessages[i]);\r\n            return false;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-competencias',\n  templateUrl: './competencias.component.html',\n  styles: []\n})\nexport class CompetenciasComponent implements OnInit {\n  tabla: [];\n  constructor( private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.tabla = this.route.snapshot.data['competenciaData'];\n  }\n\n}\n"],"sourceRoot":"webpack:///"}